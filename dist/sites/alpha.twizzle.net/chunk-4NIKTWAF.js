import{q as u}from"./chunk-ULM6IQGD.js";function D(f,h){let s=[],r=[];for(let t of h.split(`
`)){let i=t.split(" ");if(!t.startsWith("SetOrder ")){if(t.startsWith("Alg ")){let a=u.fromString(t.substring(4));r.push({alg:a,transformation:f.algToTransformation(a)})}else if(t.startsWith("SubgroupSizes "))for(let a=1;a<i.length;a++)s.push(parseInt(i[a]))}}let d={ordering:new Array(s.length)},c=[],l=0;c.push(0);let S=u.fromString(""),b=f.identityTransformation();for(let t=0;t<s.length;t++)l+=s[t],c.push(l),r.splice(l-1,0,{alg:S,transformation:b});if(r.length!==l)throw Error(`Bad sgs; expected ${l-s.length} algs but saw ${r.length-s.length}`);let p={};for(let t in f.definition.orbits){let i=f.definition.orbits[t];p[t]=new Array(i.numPieces).fill(!1)}for(let t=s.length-1;t>=0;t--){let i=[];for(let o=c[t];o<c[t+1];o++){let g=r[o].transformation;for(let e in f.definition.orbits){let m=f.definition.orbits[e];for(let n=0;n<m.numPieces;n++)(g.transformationData[e].permutation[n]!==n||g.transformationData[e].orientation[n]!==0)&&(p[e][n]||(i.push({orbitName:e,permutationIdx:n}),p[e][n]=!0))}}let a={};for(let o=c[t];o<c[t+1];o++){let g=r[o].transformation.invert(),e="";for(let m=0;m<i.length;m++){let n=i[m];e=`${e} ${g.transformationData[n.orbitName].permutation[n.permutationIdx]} ${g.transformationData[n.orbitName].orientation[n.permutationIdx]}`}a[e]=r[o],r[o].alg=r[o].alg.invert(),r[o].transformation=r[o].transformation.invert()}d.ordering[t]={pieceOrdering:i,lookup:a}}return d}export{D as a};
//# sourceMappingURL=chunk-4NIKTWAF.js.map
