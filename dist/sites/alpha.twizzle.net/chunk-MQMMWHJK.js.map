{
  "version": 3,
  "sources": ["../../../src/sites/alpha.twizzle.net/explore/url-params.ts"],
  "sourcesContent": ["// TODO: implement URL listener.\n\nimport { Alg } from \"../../../cubing/alg\";\n\nexport interface PartialURLParamValues {\n  alg?: Alg;\n  puzzle?: string;\n  puzzlegeometry?: string;\n  \"puzzle-description\": string;\n  \"debug-show-render-stats\"?: boolean;\n  tempo?: string;\n}\nexport type ParamName = keyof typeof paramDefaults;\n\ninterface CompleteURLParamValues extends PartialURLParamValues {\n  alg: Alg;\n  puzzle: string;\n  puzzlegeometry?: string;\n  \"puzzle-description\": string;\n  \"debug-show-render-stats\"?: boolean;\n  tempo?: string;\n}\n\nconst paramDefaults: CompleteURLParamValues = {\n  alg: new Alg(),\n  puzzle: \"\",\n  puzzlegeometry: \"\",\n  \"puzzle-description\": \"\",\n  \"debug-show-render-stats\": false,\n  tempo: \"1\",\n};\n\n// TODO: Encapsulate and deduplicate this.\nconst paramDefaultStrings: { [s: string]: string } = {\n  alg: \"\",\n  puzzle: \"\", // TODO: puzzle-name?\n  puzzlegeometry: \"\",\n  \"puzzle-description\": \"\",\n  \"debug-show-render-stats\": \"\",\n  tempo: \"1\",\n};\n\nexport function getURLParam<K extends ParamName>(\n  paramName: K,\n): CompleteURLParamValues[K] {\n  const str: string | null = new URLSearchParams(window.location.search).get(\n    paramName,\n  );\n  if (!str) {\n    return paramDefaults[paramName];\n  }\n  switch (paramName) {\n    case \"alg\":\n      // TODO: can we avoid the `as` cast?\n      return Alg.fromString(str) as CompleteURLParamValues[K];\n    case \"puzzle\":\n    case \"puzzlegeometry\":\n    case \"puzzle-description\":\n      // TODO: can we avoid the `as` cast?\n      return str as CompleteURLParamValues[K];\n    case \"debug-show-render-stats\":\n      // TODO: can we avoid the `as` cast?\n      return (str === \"true\") as CompleteURLParamValues[K];\n    case \"tempo\":\n      return str as CompleteURLParamValues[K];\n    default:\n      // TODO: can we avoid the `as` cast?\n      return str as CompleteURLParamValues[K];\n  }\n}\n\n// TODO\nexport function setAlgParam(key: ParamName, s: string): void {\n  if (!algParamEnabled) {\n    return;\n  }\n  const url = new URL(window.location.href);\n  const params = url.searchParams;\n  if (s === \"\") {\n    params.delete(key);\n  } else {\n    params.set(key, s);\n  }\n  window.history.replaceState(\"\", \"\", url.toString());\n}\n\nlet algParamEnabled: boolean = true;\nexport function setAlgParamEnabled(enabled: boolean) {\n  algParamEnabled = enabled;\n  if (!algParamEnabled) {\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    params.delete(\"alg\");\n    window.history.replaceState(\"\", \"\", url.toString());\n  }\n}\n\nexport function setURLParams(newParams: PartialURLParamValues): void {\n  const url = new URL(window.location.href);\n  const params = url.searchParams;\n  function setParam(key: ParamName, s: string): void {\n    if (s === paramDefaultStrings[key]) {\n      params.delete(key);\n    } else {\n      params.set(key, s);\n    }\n  }\n\n  for (const [key, value] of Object.entries(newParams)) {\n    switch (key) {\n      case \"alg\": {\n        if (algParamEnabled) {\n          setParam(key, value.toString());\n        }\n        setAlgParamEnabled;\n        break;\n      }\n      case \"puzzle\":\n      case \"puzzlegeometry\":\n      case \"puzzle-description\": {\n        setParam(key, value);\n        break;\n      }\n      case \"debug-show-render-stats\": {\n        setParam(key, value ? \"true\" : \"\");\n        break;\n      }\n      case \"tempo\": {\n        setParam(key, value);\n        break;\n      }\n      default:\n        console.warn(\"Unknown param\", key, value);\n    }\n  }\n  window.history.replaceState(\"\", \"\", url.toString());\n}\n"],
  "mappings": "wCAuBA,IAAMA,EAAwC,CAC5C,IAAK,IAAIC,EACT,OAAQ,GACR,eAAgB,GAChB,qBAAsB,GACtB,0BAA2B,GAC3B,MAAO,GACT,EAGMC,EAA+C,CACnD,IAAK,GACL,OAAQ,GACR,eAAgB,GAChB,qBAAsB,GACtB,0BAA2B,GAC3B,MAAO,GACT,EAEO,SAASC,EACdC,EAC2B,CAC3B,IAAMC,EAAqB,IAAI,gBAAgB,OAAO,SAAS,MAAM,EAAE,IACrED,CACF,EACA,GAAI,CAACC,EACH,OAAOL,EAAcI,GAEvB,OAAQA,EAAW,CACjB,IAAK,MAEH,OAAOH,EAAI,WAAWI,CAAG,EAC3B,IAAK,SACL,IAAK,iBACL,IAAK,qBAEH,OAAOA,EACT,IAAK,0BAEH,OAAQA,IAAQ,OAClB,IAAK,QACH,OAAOA,EACT,QAEE,OAAOA,CACX,CACF,CAGO,SAASC,EAAYC,EAAgBC,EAAiB,CAC3D,GAAI,CAACC,EACH,OAEF,IAAMC,EAAM,IAAI,IAAI,OAAO,SAAS,IAAI,EAClCC,EAASD,EAAI,aACfF,IAAM,GACRG,EAAO,OAAOJ,CAAG,EAEjBI,EAAO,IAAIJ,EAAKC,CAAC,EAEnB,OAAO,QAAQ,aAAa,GAAI,GAAIE,EAAI,SAAS,CAAC,CACpD,CAEA,IAAID,EAA2B,GACxB,SAASG,EAAmBC,EAAkB,CAEnD,GADAJ,EAAkBI,EACd,CAACJ,EAAiB,CACpB,IAAMC,EAAM,IAAI,IAAI,OAAO,SAAS,IAAI,EACzBA,EAAI,aACZ,OAAO,KAAK,EACnB,OAAO,QAAQ,aAAa,GAAI,GAAIA,EAAI,SAAS,CAAC,CACpD,CACF,CAEO,SAASI,EAAaC,EAAwC,CACnE,IAAML,EAAM,IAAI,IAAI,OAAO,SAAS,IAAI,EAClCC,EAASD,EAAI,aACnB,SAASM,EAAST,EAAgBC,EAAiB,CAC7CA,IAAMN,EAAoBK,GAC5BI,EAAO,OAAOJ,CAAG,EAEjBI,EAAO,IAAIJ,EAAKC,CAAC,CAErB,CAEA,OAAW,CAACD,EAAKU,CAAK,IAAK,OAAO,QAAQF,CAAS,EACjD,OAAQR,EAAK,CACX,IAAK,MAAO,CACNE,GACFO,EAAST,EAAKU,EAAM,SAAS,CAAC,EAGhC,KACF,CACA,IAAK,SACL,IAAK,iBACL,IAAK,qBAAsB,CACzBD,EAAST,EAAKU,CAAK,EACnB,KACF,CACA,IAAK,0BAA2B,CAC9BD,EAAST,EAAKU,EAAQ,OAAS,EAAE,EACjC,KACF,CACA,IAAK,QAAS,CACZD,EAAST,EAAKU,CAAK,EACnB,KACF,CACA,QACE,QAAQ,KAAK,gBAAiBV,EAAKU,CAAK,CAC5C,CAEF,OAAO,QAAQ,aAAa,GAAI,GAAIP,EAAI,SAAS,CAAC,CACpD",
  "names": ["paramDefaults", "Alg", "paramDefaultStrings", "getURLParam", "paramName", "str", "setAlgParam", "key", "s", "algParamEnabled", "url", "params", "setAlgParamEnabled", "enabled", "setURLParams", "newParams", "setParam", "value"]
}
