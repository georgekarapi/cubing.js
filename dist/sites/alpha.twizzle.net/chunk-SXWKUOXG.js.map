{
  "version": 3,
  "sources": ["../../../src/cubing/search/inside/solve/puzzles/clock.ts", "../../../src/cubing/search/inside/solve/puzzles/wca-minx.ts", "../../../src/cubing/vendor/apache/comlink-everywhere/outside/index.ts", "../../../src/cubing/search/inside/search-worker-ts-entry-path-getter.ts", "../../../src/cubing/search/instantiator.ts", "../../../src/cubing/search/outside.ts", "../../../src/cubing/twisty/views/stream/TwistyStreamSource.css.ts", "../../../src/cubing/twisty/views/stream/TwistyStreamSource.ts", "../../../src/sites/alpha.twizzle.net/edit/app.ts"],
  "sourcesContent": ["import { randomUIntBelow } from \"random-uint-below\";\n\nconst pins = [\"UR\", \"DR\", \"DL\", \"UL\"];\nconst backMoves = [\"U\", \"R\", \"D\", \"L\", \"ALL\"];\nconst frontMoves = pins.concat(backMoves);\n\nexport function randomClockScrambleString(): string {\n  let filteringMoveCount = 0;\n\n  function randomSuffix() {\n    const amount = randomUIntBelow(12);\n    if (amount !== 0) {\n      filteringMoveCount++;\n    }\n    if (amount <= 6) {\n      return `${amount}+`;\n    } else {\n      return `${12 - amount}-`;\n    }\n  }\n\n  const moves = [];\n  function side(families: string[]): void {\n    for (const family of families) {\n      moves.push(`${family}${randomSuffix()}`);\n    }\n  }\n\n  side(frontMoves);\n  moves.push(\"y2\");\n  side(backMoves);\n\n  // https://www.worldcubeassociation.org/regulations/#4b3\n  if (filteringMoveCount < 2) {\n    return randomClockScrambleString();\n  }\n\n  for (const pin of pins) {\n    if (randomUIntBelow(2) === 0) {\n      moves.push(pin);\n    }\n  }\n  return moves.join(\" \");\n}\n", "import { randomUIntBelow } from \"random-uint-below\";\n\nconst suffixes = [\"++\", \"--\"];\n\nexport function randomMegaminxScrambleString(): string {\n  function rdPair(): string {\n    return `R${suffixes[randomUIntBelow(2)]} D${suffixes[randomUIntBelow(2)]}`;\n  }\n\n  function randomU(): string {\n    return `U${[\"\", \"'\"][randomUIntBelow(2)]}`;\n  }\n\n  function row(): string {\n    const chunks = [];\n    for (let i = 0; i < 5; i++) {\n      chunks.push(rdPair());\n    }\n    chunks.push(randomU());\n    return chunks.join(\" \");\n  }\n\n  const chunks = [];\n  for (let i = 0; i < 6; i++) {\n    chunks.push(row());\n  }\n  return chunks.join(\"\\n\");\n}\n", "import nodeEndpoint from \"../node-adapter\";\n\nexport { wrap } from \"comlink\";\n// Mangled so that bundlers don't try to inline the source.\n\nconst worker_threads_mangled = \"node:w-orker-_threa-ds\";\nconst worker_threads_unmangled = () => worker_threads_mangled.replace(/-/g, \"\");\n\nconst useNodeWorkarounds =\n  typeof globalThis.Worker === \"undefined\" &&\n  typeof (globalThis as any).WorkerNavigator === \"undefined\";\n\nasync function nodeWorker(\n  source: string | URL,\n  options?: { eval?: boolean },\n): Promise<Worker> {\n  const { Worker: NodeWorker } = await import(\n    /* @vite-ignore */ worker_threads_unmangled()\n  );\n  const worker = new NodeWorker(source, options);\n  worker.unref();\n  return nodeEndpoint(worker);\n}\n\nexport async function constructWorker(\n  source: string | URL,\n  options?: { eval?: boolean; type?: WorkerType },\n): Promise<Worker> {\n  let worker;\n  if (useNodeWorkarounds) {\n    return nodeWorker(source, { eval: options?.eval });\n  } else {\n    if (options?.eval) {\n      const blob = new Blob([source as string], {\n        type: \"application/javascript\",\n      });\n      source = URL.createObjectURL(blob);\n    }\n    worker = new globalThis.Worker(source, {\n      type: options ? options.type : undefined, // TODO: Is it safe to use `options?.type`?\n    });\n  }\n  return worker;\n}\n", "import { exposeAPI } from \"./worker-guard\";\n\nexposeAPI.expose = false;\nexport async function getWorkerEntryFileURL() {\n  return (await import(\"./search-worker-ts-entry\")).WORKER_ENTRY_FILE_URL;\n}\n", "import {\n  constructWorker,\n  wrap,\n} from \"../vendor/apache/comlink-everywhere/outside\";\nimport { insideAPI, WorkerInsideAPI } from \"./inside/api\";\nimport { getWorkerEntryFileURL } from \"./inside/search-worker-ts-entry-path-getter\";\nimport { searchOutsideDebugGlobals } from \"./outside\";\n\nconst MODULE_WORKER_TIMEOUT_MILLISECONDS = 5000;\n\nexport interface WorkerOutsideAPI {\n  terminate: () => void; // `node` can return a `Promise` with an exit code, but we match the web worker API.\n}\nexport interface InsideOutsideAPI {\n  insideAPI: WorkerInsideAPI;\n  outsideAPI: WorkerOutsideAPI;\n}\n\nexport async function instantiateModuleWorker(): Promise<InsideOutsideAPI> {\n  // rome-ignore lint/suspicious/noAsyncPromiseExecutor: TODO\n  return new Promise<InsideOutsideAPI>(async (resolve, reject) => {\n    const timeoutID = setTimeout(() => {\n      reject(new Error(\"module instantiation timeout\"));\n    }, MODULE_WORKER_TIMEOUT_MILLISECONDS);\n\n    try {\n      const workerEntryFileURL = await getWorkerEntryFileURL();\n      if (!workerEntryFileURL) {\n        reject(new Error(\"Could not get worker entry file URL.\"));\n      }\n      let url: string | URL;\n      if (globalThis.Worker) {\n        // Standard browser-like environment.\n        const importSrc = `import \"${workerEntryFileURL}\";`;\n        const blob = new Blob([importSrc], {\n          type: \"text/javascript\",\n        });\n        url = URL.createObjectURL(blob);\n      } else {\n        // `node` < 18 doesn't have `Blob`:\n        // https://nodejs.org/ko/blog/announcements/v18-release-announce/#other-global-apis\n        // But `node` will not let us construct a worker from a `blob:` URL either.\n        //\n        // We need to keep the original entry file URL, but we have to wrap it in the `URL` class.\n        url = new URL(workerEntryFileURL);\n      }\n\n      const worker = (await constructWorker(url, {\n        type: \"module\",\n      })) as Worker & {\n        nodeWorker?: import(\"worker_threads\").Worker;\n      };\n\n      const onError = (e: ErrorEvent) => {\n        // TODO: Remove fallback when Firefox implements module workers: https://bugzilla.mozilla.org/show_bug.cgi?id=1247687\n        if (e.message?.startsWith(\"SyntaxError\")) {\n          reject(e);\n        }\n      };\n\n      const onFirstMessage = (messageData: string) => {\n        if (messageData === \"comlink-exposed\") {\n          // We need to clear the timeout so that we don't prevent `node` from exiting in the meantime.\n          clearTimeout(timeoutID);\n          resolve(wrapWithTerminate(worker));\n        } else {\n          reject(\n            new Error(`wrong module instantiation message ${messageData}`),\n          );\n        }\n      };\n\n      if (worker.nodeWorker) {\n        // We have to use `once` so the `unref()` from `comlink-everywhere` allows the process to quite as expected.\n        worker.nodeWorker.once(\"message\", onFirstMessage);\n      } else {\n        worker.addEventListener(\"error\", onError, {\n          once: true,\n        });\n        worker.addEventListener(\"message\", (e) => onFirstMessage(e.data), {\n          once: true,\n        });\n      }\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\nfunction wrapWithTerminate(worker: Worker): InsideOutsideAPI {\n  const insideAPI = wrap<WorkerInsideAPI>(worker);\n  const terminate = worker.terminate.bind(worker);\n  return { insideAPI, outsideAPI: { terminate } };\n}\n\nasync function instantiateClassicWorker(): Promise<InsideOutsideAPI> {\n  const { workerSource } = await import(\n    \"./search-worker-inside-generated-string.js\"\n  );\n  const worker = await constructWorker(workerSource, { eval: true });\n  return wrapWithTerminate(worker);\n}\n\nexport const allInsideOutsideAPIPromises: Promise<InsideOutsideAPI>[] = [];\n\nexport async function instantiateWorker(): Promise<InsideOutsideAPI> {\n  const insideOutsideAPIPromise = instantiateWorkerImplementation();\n  allInsideOutsideAPIPromises.push(insideOutsideAPIPromise);\n  insideAPI.setDebugMeasurePerf(searchOutsideDebugGlobals.logPerf);\n  insideAPI.setScramblePrefetchLevel(\n    searchOutsideDebugGlobals.scramblePrefetchLevel,\n  );\n  return insideOutsideAPIPromise;\n}\n\nexport async function mapToAllWorkers(\n  f: (worker: InsideOutsideAPI) => void,\n): Promise<void> {\n  await Promise.all(\n    allInsideOutsideAPIPromises.map((worker) => worker.then(f)),\n  );\n}\n\nasync function instantiateWorkerImplementation(): Promise<InsideOutsideAPI> {\n  if (searchOutsideDebugGlobals.forceStringWorker) {\n    console.warn(\n      \"Using the `forceStringWorker` workaround for search worker instantiation. This will require downloading significantly more code than necessary, but the functionality will be the same.\",\n    );\n    return instantiateClassicWorker();\n  }\n  try {\n    // `await` is important for `catch` to work.\n    return await instantiateModuleWorker();\n  } catch (e) {\n    const commonErrorPrefix =\n      \"Could not instantiate module worker (this may happen in Firefox, or when using Parcel).\";\n    if (searchOutsideDebugGlobals.disableStringWorker) {\n      console.error(\n        `${commonErrorPrefix} Fallback to string worker is disabled.`,\n        e,\n      );\n      throw new Error(\"Module worker instantiation failed.\");\n    }\n    console.warn(`${commonErrorPrefix} Falling back to string worker.`, e);\n    return instantiateClassicWorker();\n  }\n}\n", "import { Alg } from \"../alg\";\nimport type { KPuzzle } from \"../kpuzzle\";\n// import { preInitialize222 } from \"../implementations/2x2x2\";\nimport type { KState } from \"../kpuzzle/KState\";\nimport type { PrefetchLevel } from \"./inside/api\";\nimport { randomClockScrambleString } from \"./inside/solve/puzzles/clock\"; // TODO: don't reach into `inside` code.\nimport { randomMegaminxScrambleString } from \"./inside/solve/puzzles/wca-minx\"; // TODO: don't reach into `inside` code.\nimport type { TwsearchOptions } from \"./inside/solve/twsearch\";\nimport {\n  InsideOutsideAPI,\n  instantiateWorker,\n  mapToAllWorkers,\n} from \"./instantiator\";\n\nlet cachedWorkerInstance: Promise<InsideOutsideAPI> | null = null;\nasync function getCachedWorkerInstance(): Promise<InsideOutsideAPI> {\n  return await (cachedWorkerInstance ??= instantiateWorker());\n}\n\n// Pre-initialize the scrambler for the given event. (Otherwise, an event is\n// initialized the first time you ask for a scramble for that event.)\n//\n// Some typical numbers for a fast computer:\n// - 3x3x3 initialization: 200ms\n// - Each 3x3x3 scramble: 50ms\n// - 4x4x4 initialization: 2500ms\n// - Each 4x4x4 scramble: 300ms to 800ms\n//\n// It is safe to immediately call for a scramble\n// any time after starting pre-initialization, or to call for them without\n// pre-initializing. Pre-initializing essentially gives the scramble worker a\n// head start in case a scramble doesn't get requested immediately.\n//\n// Note that events cannot be pre-initialized in parallel. Attempting to\n// pre-initialize multiple events will initialize them consecutively. Scrambles\n// for a given event cannot be computed while another event is being initialized.\nexport function _preInitializationHintForEvent(\n  eventID: string,\n  // callback?: () => void\n): void {\n  switch (eventID) {\n    case \"clock\":\n    case \"minx\":\n      return;\n    case \"333oh\":\n      _preInitializationHintForEvent(\"333\");\n      return;\n  }\n  (async () => {\n    await (await getCachedWorkerInstance()).insideAPI.initialize(eventID);\n  })();\n}\n\nexport async function randomScrambleForEvent(eventID: string): Promise<Alg> {\n  switch (eventID) {\n    case \"clock\":\n      return Alg.fromString(await randomClockScrambleString());\n    case \"minx\":\n      return Alg.fromString(await randomMegaminxScrambleString());\n  }\n  const prom = _randomScrambleStringForEvent(eventID);\n  const wat = await prom;\n  return Alg.fromString(wat);\n}\n\nexport async function _randomScrambleStringForEvent(\n  eventID: string,\n): Promise<string> {\n  if (searchOutsideDebugGlobals.forceNewWorkerForEveryScramble) {\n  }\n  const worker = searchOutsideDebugGlobals.forceNewWorkerForEveryScramble\n    ? await instantiateWorker()\n    : await getCachedWorkerInstance();\n  return worker.insideAPI.randomScrambleStringForEvent(eventID);\n}\n\nexport async function randomScrambleStringForEvent(\n  eventID: string,\n): Promise<string> {\n  switch (eventID) {\n    case \"clock\":\n      return randomClockScrambleString();\n    case \"minx\":\n      return randomMegaminxScrambleString();\n  }\n  return await _randomScrambleStringForEvent(eventID);\n}\n\nexport async function experimentalSolve3x3x3IgnoringCenters(\n  state: KState,\n): Promise<Alg> {\n  const cwi = await getCachedWorkerInstance();\n  return Alg.fromString(await cwi.insideAPI.solve333ToString(state.stateData));\n}\n\nexport async function experimentalSolve2x2x2(state: KState): Promise<Alg> {\n  const cwi = await getCachedWorkerInstance();\n  return Alg.fromString(await cwi.insideAPI.solve222ToString(state.stateData));\n}\n\nexport async function solveSkewb(state: KState): Promise<Alg> {\n  const cwi = await getCachedWorkerInstance();\n  return Alg.fromString(\n    await cwi.insideAPI.solveSkewbToString(state.stateData),\n  );\n}\n\nexport async function solvePyraminx(state: KState): Promise<Alg> {\n  const cwi = await getCachedWorkerInstance();\n  return Alg.fromString(\n    await cwi.insideAPI.solvePyraminxToString(state.stateData),\n  );\n}\n\nexport async function solveMegaminx(state: KState): Promise<Alg> {\n  const cwi = await getCachedWorkerInstance();\n  return Alg.fromString(\n    await cwi.insideAPI.solveMegaminxToString(state.stateData),\n  );\n}\n\nexport async function solveTwsearch(\n  kpuzzle: KPuzzle,\n  state: KState,\n  options?: { moveSubset?: string[]; startState?: KState; minDepth?: number },\n): Promise<Alg> {\n  const { startState, ...otherOptions } = options ?? {};\n  const apiOptions: TwsearchOptions = otherOptions;\n  if (startState) {\n    apiOptions.startState =\n      startState.experimentalToTransformation()!.transformationData;\n  }\n  const { ...def } = kpuzzle.definition;\n  delete def.experimentalIsStateSolved;\n  // delete def.experimentalDerivedMoves;\n  const dedicatedWorker = await instantiateWorker();\n  try {\n    return Alg.fromString(\n      await dedicatedWorker.insideAPI.solveTwsearchToString(\n        def,\n        state.experimentalToTransformation()!.transformationData,\n        apiOptions,\n      ),\n    );\n  } finally {\n    console.log(\"Search ended, terminating dedicated `twsearch` worker.\");\n    // TODO: support re-using the same worker for multiple searches..\n    await dedicatedWorker.outsideAPI.terminate();\n  }\n}\n\ninterface SearchOutsideDebugGlobals {\n  logPerf: boolean;\n  scramblePrefetchLevel: `${PrefetchLevel}`;\n  forceStringWorker: boolean;\n  disableStringWorker: boolean;\n  forceNewWorkerForEveryScramble: boolean;\n}\nexport const searchOutsideDebugGlobals: SearchOutsideDebugGlobals = {\n  logPerf: false,\n  scramblePrefetchLevel: \"auto\",\n  forceStringWorker: false,\n  disableStringWorker: false,\n  forceNewWorkerForEveryScramble: false,\n};\n\nexport function setDebug(options: Partial<SearchOutsideDebugGlobals>): void {\n  const { logPerf, scramblePrefetchLevel } = options;\n  if (typeof logPerf !== \"undefined\") {\n    searchOutsideDebugGlobals.logPerf = logPerf;\n    mapToAllWorkers((worker) => worker.insideAPI.setDebugMeasurePerf(logPerf));\n  }\n  if (typeof scramblePrefetchLevel !== \"undefined\") {\n    searchOutsideDebugGlobals.scramblePrefetchLevel = scramblePrefetchLevel;\n    mapToAllWorkers((worker) =>\n      worker.insideAPI.setScramblePrefetchLevel(\n        scramblePrefetchLevel as PrefetchLevel,\n      ),\n    );\n  }\n  if (\"forceStringWorker\" in options) {\n    searchOutsideDebugGlobals.forceStringWorker = !!options.forceStringWorker;\n  }\n  if (\"disableStringWorker\" in options) {\n    searchOutsideDebugGlobals.disableStringWorker =\n      !!options.disableStringWorker;\n  }\n  if (\"forceNewWorkerForEveryScramble\" in options) {\n    searchOutsideDebugGlobals.forceNewWorkerForEveryScramble =\n      !!options.forceNewWorkerForEveryScramble;\n  }\n}\n", "import { CSSSource } from \"../ManagedCustomElement\";\n\nexport const twistyStreamSourceCSS = new CSSSource(\n  `\n:host {\n  width: 384px;\n  height: 256px;\n  display: grid;\n\n  font-family: \"Ubuntu\", sans-serif;\n}\n\n.wrapper {\n  display: grid;\n  place-content: center;\n  gap: 0.5em;\n}\n`,\n);\n", "import { Move } from \"../../../alg\";\nimport type { KeyboardPuzzle } from \"../../../bluetooth/keyboard\";\nimport type {\n  BluetoothPuzzle,\n  AlgLeafEvent,\n} from \"../../../bluetooth/smart-puzzle/bluetooth-puzzle\";\nimport type { ExperimentalTwizzleStreamServer } from \"../../../stream\";\nimport type { PuzzleStreamMoveEventRegisterCompatible } from \"../../../stream/process/ReorientedStream\";\nimport { ManagedCustomElement } from \"../ManagedCustomElement\";\nimport { customElementsShim } from \"../node-custom-element-shims\";\nimport { twistyStreamSourceCSS } from \"./TwistyStreamSource.css\";\n\ninterface StreamSource extends EventTarget {\n  disconnect?: () => void;\n}\n\nclass BluetoothStreamSource extends EventTarget {\n  private constructor(private puzzle: BluetoothPuzzle) {\n    super();\n    puzzle.addAlgLeafListener((e: AlgLeafEvent): void => {\n      const move = e.latestAlgLeaf.as(Move);\n      if (!move) {\n        return;\n      }\n      this.dispatchEvent(\n        new CustomEvent(\"move\", {\n          detail: {\n            move,\n          },\n        }),\n      );\n    });\n  }\n\n  static async connect(): Promise<BluetoothStreamSource> {\n    const bluetooth = await import(\"../../../bluetooth\");\n    const puzzle = await bluetooth.connectSmartPuzzle();\n    return new BluetoothStreamSource(puzzle);\n  }\n\n  disconnect(): void {\n    this.puzzle.disconnect();\n  }\n}\n\nclass KeyboardStreamSource extends EventTarget {\n  private constructor(private puzzle: KeyboardPuzzle) {\n    super();\n    puzzle.addAlgLeafListener((e: AlgLeafEvent) => {\n      const move = e.latestAlgLeaf.as(Move);\n      if (!move) {\n        return;\n      }\n      this.dispatchEvent(\n        new CustomEvent(\"move\", {\n          detail: {\n            move,\n          },\n        }),\n      );\n    });\n  }\n\n  static async connect(): Promise<KeyboardStreamSource> {\n    const bluetooth = await import(\"../../../bluetooth\");\n    const puzzle = await bluetooth.debugKeyboardConnect();\n    return new KeyboardStreamSource(puzzle);\n  }\n\n  disconnect(): void {\n    this.puzzle.disconnect();\n  }\n}\n\nexport class TwistyStreamSource extends ManagedCustomElement {\n  constructor() {\n    super();\n    this.addCSS(twistyStreamSourceCSS);\n\n    this.addElement(document.createElement(\"span\")).textContent =\n      \"Connect a stream source:\";\n\n    const bluetoothButton = this.addSource(\n      \"\uD83D\uDCE1 Bluetooth\",\n      BluetoothStreamSource,\n    );\n    this.addSource(\"\u2328\uFE0F Keyboard\", KeyboardStreamSource);\n    this.addStreamSource();\n\n    if (!navigator?.bluetooth) {\n      bluetoothButton.disabled = true;\n    }\n  }\n\n  addSource(\n    label: string,\n    sourceClass: { connect: () => Promise<StreamSource> },\n  ): HTMLButtonElement {\n    const button = this.addElement(document.createElement(\"button\"));\n    button.textContent = label;\n    button.addEventListener(\"click\", async () => {\n      const source = await sourceClass.connect();\n      button.disabled = true;\n      button.textContent += \" \u2705\";\n      source.addEventListener(\n        \"move\",\n        (e: PuzzleStreamMoveEventRegisterCompatible) => {\n          this.dispatchEvent(new CustomEvent(\"move\", e));\n        },\n      );\n      // TODO: Hook up UI for disconnection.\n    });\n    return button;\n  }\n\n  addStreamSource(): void {\n    const SENTINEL_VALUE = \"SENTINEL\";\n    const button = this.addElement(document.createElement(\"button\"));\n    button.textContent = \"\uD83D\uDD34 Get Twizzle streams\";\n\n    const select = this.addElement(document.createElement(\"select\"));\n    select.appendChild(document.createElement(\"option\")).textContent =\n      \"Streams\";\n    select.disabled = true;\n\n    let streamServer: ExperimentalTwizzleStreamServer | null = null;\n    button.addEventListener(\"click\", async () => {\n      const TwizzleStreamServer = (await import(\"../../../stream\"))\n        .ExperimentalTwizzleStreamServer;\n      streamServer ||= new TwizzleStreamServer();\n      const streams = await streamServer.streams();\n      select.textContent = \"\";\n      select.disabled = false;\n      const info = select.appendChild(document.createElement(\"option\"));\n      info.textContent = `Select a stream (${streams.length} available)`;\n      info.value = SENTINEL_VALUE;\n      for (const stream of streams) {\n        const firstSender = stream.senders[0];\n        const option = select.appendChild(document.createElement(\"option\"));\n        option.value = stream.streamID;\n        option.textContent = `${firstSender.name} (${stream.streamID.slice(\n          -2,\n        )})`;\n      }\n    });\n\n    select.addEventListener(\"change\", () => {\n      const streamID = select.value;\n      if (streamID === SENTINEL_VALUE) {\n        return;\n      }\n      const stream = streamServer!.connect(streamID);\n      stream.addEventListener(\n        \"move\",\n        (moveEvent: PuzzleStreamMoveEventRegisterCompatible) => {\n          console.log(moveEvent);\n          this.dispatchEvent(new CustomEvent(\"move\", moveEvent));\n        },\n      );\n    });\n  }\n}\n\ncustomElementsShim.define(\"twisty-stream-source\", TwistyStreamSource);\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"twisty-stream-source\": TwistyStreamSource;\n  }\n}\n", "import { Alg, AlgBuilder, LineComment, Newline } from \"../../../cubing/alg\";\nimport { experimentalEnsureAlg } from \"../../../cubing/alg/Alg\";\nimport { experimentalCountMovesETM } from \"../../../cubing/notation\";\nimport { puzzles } from \"../../../cubing/puzzles\";\nimport { randomScrambleForEvent } from \"../../../cubing/scramble\";\nimport {\n  experimentalSolve2x2x2,\n  experimentalSolve3x3x3IgnoringCenters,\n  solveMegaminx,\n  solvePyraminx,\n  solveSkewb,\n} from \"../../../cubing/search\";\nimport type { PuzzleStreamMoveEventRegisterCompatible } from \"../../../cubing/stream/process/ReorientedStream\";\nimport \"../../../cubing/twisty\"; // For `<twisty-alg-editor>` custom elem registration.\nimport {\n  ExperimentalStickering,\n  PuzzleID,\n  TwistyPlayer,\n  TwistyPlayerConfig,\n} from \"../../../cubing/twisty\";\nimport { getStickeringGroup } from \"../../../cubing/twisty/cubing-private\";\nimport type { AlgWithIssues } from \"../../../cubing/twisty/model/props/puzzle/state/AlgProp\";\nimport type { SetupToLocation } from \"../../../cubing/twisty/model/props/puzzle/state/SetupAnchorProp\";\nimport { FreshListenerManager } from \"../../../cubing/twisty/model/props/TwistyProp\";\nimport { customElementsShim } from \"../../../cubing/twisty/views/node-custom-element-shims\";\nimport \"../../../cubing/twisty/views/stream/TwistyStreamSource\";\nimport type { TwistyStreamSource } from \"../../../cubing/twisty/views/stream/TwistyStreamSource\";\nimport type { TwistyAlgEditor } from \"../../../cubing/twisty/views/TwistyAlgEditor/TwistyAlgEditor\";\nimport { URLParamUpdater } from \"../../../cubing/twisty/views/twizzle/url-params\";\nimport { computeAlgFeatures } from \"./alg-features\";\nimport { findOrCreateChild, findOrCreateChildWithClass } from \"./dom\";\nimport { examples } from \"./examples\";\nimport { APP_TITLE } from \"./strings\";\nimport { puzzleGroups, supportedPuzzles } from \"./supported-puzzles\";\n// import { setURLParams } from \"./url-params\";\n\n// TODO: introduce concepts in `cubing/twisty` for \"this is a valid twisty-player value, but not for the current puzzle\".\nconst UNSUPPORTED_STICKERING = \"(unsupported stickering)\";\n\nfunction algAppend(oldAlg: Alg, comment: string, newAlg: Alg): Alg {\n  const newAlgBuilder = new AlgBuilder();\n  newAlgBuilder.experimentalPushAlg(oldAlg);\n  if (\n    !(\n      oldAlg.experimentalIsEmpty() ||\n      Array.from(oldAlg.childAlgNodes()).slice(-1)[0].is(Newline)\n    )\n  ) {\n    newAlgBuilder.push(new Newline());\n  }\n  newAlgBuilder.push(new LineComment(comment));\n  newAlgBuilder.push(new Newline());\n  newAlgBuilder.experimentalPushAlg(newAlg);\n  return newAlgBuilder.toAlg();\n}\n\nconst SCRAMBLE_EVENTS: Partial<Record<PuzzleID, string>> = {\n  \"3x3x3\": \"333\",\n  \"2x2x2\": \"222\",\n  \"4x4x4\": \"444\",\n  \"5x5x5\": \"555\",\n  \"6x6x6\": \"666\",\n  \"7x7x7\": \"777\",\n  clock: \"clock\",\n  megaminx: \"minx\",\n  pyraminx: \"pyram\",\n  skewb: \"skewb\",\n  square1: \"sq1\",\n  fto: \"fto\",\n  master_tetraminx: \"master_tetraminx\",\n  kilominx: \"kilominx\",\n  redi_cube: \"redi_cube\",\n};\n\nexport class App {\n  public twistyPlayer: TwistyPlayer;\n  private puzzlePane: HTMLElement;\n  public controlPane: ControlPane;\n  constructor(public element: Element, initialConfig: TwistyPlayerConfig) {\n    this.puzzlePane = findOrCreateChild(\n      this.element,\n      \"puzzle-pane\",\n      \"puzzle-pane\",\n    );\n    this.puzzlePane.classList.remove(\"loading\");\n    const spinner = this.puzzlePane.querySelector(\".spinner\");\n    if (spinner) {\n      this.puzzlePane.removeChild(spinner);\n    }\n\n    this.initializeTwisty(initialConfig);\n\n    const controlPaneElem = findOrCreateChild(\n      this.element,\n      \"control-pane\",\n      \"control-pane\",\n    );\n    controlPaneElem.classList.remove(\"loading\");\n    // tslint:disable-next-line: no-unused-expression\n    this.controlPane = new ControlPane(\n      this,\n      this.twistyPlayer,\n      controlPaneElem,\n      this.solve.bind(this),\n      this.scramble.bind(this),\n    );\n\n    new URLParamUpdater(this.twistyPlayer.experimentalModel);\n  }\n\n  // TODO: avoid modifying `initialConfig`?\n  private initializeTwisty(initialConfig: TwistyPlayerConfig): void {\n    initialConfig.viewerLink = \"none\";\n    this.twistyPlayer = new TwistyPlayer(initialConfig);\n    this.twistyPlayer.experimentalModel.twistySceneModel.initialHintFaceletsAnimation.set(\n      \"none\",\n    );\n    this.puzzlePane.appendChild(this.twistyPlayer);\n  }\n\n  async solve(): Promise<void> {\n    const [puzzleID, currentAlgWithIssues] = await Promise.all([\n      this.twistyPlayer.experimentalModel.puzzleID.get(),\n      this.twistyPlayer.experimentalModel.alg.get(),\n    ]);\n    const currentAlg = currentAlgWithIssues.alg;\n    let solution: Alg;\n    const kpuzzle = await puzzles[puzzleID].kpuzzle();\n    console.log(kpuzzle);\n    switch (puzzleID) {\n      case \"2x2x2\": {\n        solution = await experimentalSolve2x2x2(\n          kpuzzle.algToTransformation(currentAlg).toKState(),\n        );\n        break;\n      }\n      case \"3x3x3\": {\n        solution = await experimentalSolve3x3x3IgnoringCenters(\n          kpuzzle.algToTransformation(currentAlg).toKState(),\n        );\n        break;\n      }\n      case \"skewb\": {\n        solution = await solveSkewb(\n          kpuzzle.algToTransformation(currentAlg).toKState(),\n        );\n        break;\n      }\n      case \"pyraminx\": {\n        solution = await solvePyraminx(\n          kpuzzle.algToTransformation(currentAlg).toKState(),\n        );\n        break;\n      }\n      case \"megaminx\": {\n        solution = await solveMegaminx(\n          kpuzzle.algToTransformation(currentAlg).toKState(),\n        );\n        break;\n      }\n      default:\n        return;\n    }\n    this.twistyPlayer.alg = algAppend(currentAlg, \" Solution\", solution);\n  }\n\n  async scramble(): Promise<void> {\n    const [puzzleID, currentAlgWithIssues] = await Promise.all([\n      this.twistyPlayer.experimentalModel.puzzleID.get(),\n      this.twistyPlayer.experimentalModel.alg.get(),\n    ]);\n    const event = SCRAMBLE_EVENTS[puzzleID];\n    if (event) {\n      this.twistyPlayer.alg = algAppend(\n        currentAlgWithIssues.alg,\n        \" Scramble\",\n        await randomScrambleForEvent(event),\n      );\n    }\n  }\n}\n\nclass ButtonGrid extends HTMLElement {\n  constructor() {\n    super();\n    for (const button of Array.from(this.querySelectorAll(\"button\"))) {\n      button.addEventListener(\"click\", this.onClick.bind(this));\n    }\n  }\n\n  onClick(e: MouseEvent): void {\n    this.dispatchEvent(\n      new CustomEvent(\"action\", {\n        detail: { action: (e.target as HTMLButtonElement).id },\n      }),\n    );\n  }\n\n  setButtonEnabled(id: string, enabled: boolean): void {\n    // TODO: better button binding\n    (this.querySelector(`#${id}`) as HTMLButtonElement).disabled = !enabled;\n  }\n}\n\ncustomElementsShim.define(\"button-grid\", ButtonGrid);\n\nclass ControlPane {\n  public experimentalSetupAlgInput: TwistyAlgEditor;\n  public algInput: TwistyAlgEditor;\n  public moveCountDisplay: HTMLElement;\n  public puzzleSelect: HTMLSelectElement;\n  public setupAnchorSelect: HTMLSelectElement;\n  public stickeringSelect: HTMLSelectElement;\n  public tempoInput: HTMLInputElement;\n  public hintFaceletCheckbox: HTMLInputElement;\n  public toolGrid: ButtonGrid;\n  public examplesGrid: ButtonGrid;\n  private tempoDisplay: HTMLSpanElement;\n  private caretNISSInfo: HTMLElement;\n  private commutatorConjugateInfo: HTMLElement;\n  private square1Info: HTMLElement;\n  private twistyStreamSource: TwistyStreamSource;\n  constructor(\n    private app: App,\n    private twistyPlayer: TwistyPlayer,\n    public element: Element,\n    private solve: () => void,\n    private scramble: () => void,\n  ) {\n    const appTitleElem: HTMLAnchorElement = findOrCreateChildWithClass(\n      this.element,\n      \"title\",\n    );\n    appTitleElem.textContent = APP_TITLE;\n\n    // TODO: validation?\n    twistyPlayer.experimentalModel.puzzleID.addFreshListener(\n      this.onPuzzle.bind(this),\n    );\n    twistyPlayer.experimentalModel.title.addFreshListener((title) => {\n      appTitleElem.textContent = title ?? APP_TITLE;\n    });\n    twistyPlayer.experimentalModel.alg.addFreshListener(({ alg }) => {\n      // TODO: also do this for the setup alg?\n      const algFeatures = computeAlgFeatures(alg);\n      this.caretNISSInfo.hidden = !algFeatures.caretNISS;\n      this.commutatorConjugateInfo.hidden = !(\n        algFeatures.commutator || algFeatures.conjugate\n      );\n      const which: string[] = [];\n      if (algFeatures.commutator) {\n        which.push(\"commutator\");\n      }\n      if (algFeatures.conjugate) {\n        which.push(\"conjugate\");\n      }\n      this.commutatorConjugateInfo.querySelector(\n        \"a\",\n      )!.textContent = `${which.join(\" and \")} notation`;\n      this.square1Info.hidden = !algFeatures.square1;\n    });\n    twistyPlayer.experimentalModel.videoURL.addFreshListener((url) => {\n      const a = document.querySelector(\".video-url\") as HTMLAnchorElement;\n      const urlString = url?.toString();\n      a.href = urlString ? urlString : \"\";\n      a.textContent = urlString ? \"\uD83C\uDFA5 Video\" : \"\";\n    });\n    twistyPlayer.experimentalModel.competitionID.addFreshListener(\n      (competitionID) => {\n        const a = document.querySelector(\n          \".competition-url\",\n        ) as HTMLAnchorElement;\n        a.href = competitionID\n          ? `https://www.worldcubeassociation.org/competitions/${competitionID}`\n          : \"\";\n        a.textContent = competitionID ? \"\uD83C\uDFC6 Competition\" : \"\";\n      },\n    );\n\n    /*******/\n\n    this.experimentalSetupAlgInput = findOrCreateChildWithClass(\n      this.element,\n      \"experimental-setup-alg\",\n      \"twisty-alg-editor\",\n    );\n    this.experimentalSetupAlgInput.twistyPlayer = twistyPlayer;\n\n    this.moveCountDisplay = findOrCreateChildWithClass(\n      this.element,\n      \"move-count\",\n      \"span\",\n    );\n    this.twistyPlayer.experimentalModel.puzzleAlg.addFreshListener(\n      (algWithIssues: AlgWithIssues) => {\n        if (algWithIssues.issues.errors.length === 0) {\n          this.moveCountDisplay.textContent = ` (${experimentalCountMovesETM(\n            algWithIssues.alg,\n          )} ETM)`;\n        } else {\n          this.moveCountDisplay.textContent = \"\";\n        }\n      },\n    );\n\n    this.algInput = findOrCreateChildWithClass(\n      this.element,\n      \"alg\",\n      \"twisty-alg-editor\",\n    );\n    this.algInput.twistyPlayer = twistyPlayer;\n\n    this.puzzleSelect = findOrCreateChildWithClass(\n      this.element,\n      \"puzzle\",\n      \"select\",\n    );\n    this.twistyPlayer.experimentalModel.puzzleID\n      .get()\n      .then((puzzleID) => this.initializePuzzleSelect(puzzleID));\n\n    this.setupAnchorSelect = findOrCreateChildWithClass(\n      this.element,\n      \"setup-anchor\",\n      \"select\",\n    );\n    this.twistyPlayer.experimentalModel.setupAnchor\n      .get()\n      .then((anchor) => this.initializeSetupAnchorSelect(anchor));\n\n    this.stickeringSelect = findOrCreateChildWithClass(\n      this.element,\n      \"stickering\",\n      \"select\",\n    );\n    const freshListenerManager = new FreshListenerManager();\n    freshListenerManager.addMultiListener(\n      [\n        this.twistyPlayer.experimentalModel.twistySceneModel.stickeringRequest,\n        this.twistyPlayer.experimentalModel.puzzleID,\n      ],\n      ([stickeringRequest, puzzleID]) =>\n        this.updateStickeringSelect(stickeringRequest, puzzleID),\n    );\n\n    this.tempoInput = findOrCreateChildWithClass(\n      this.element,\n      \"tempo\",\n      \"input\",\n    );\n    this.tempoDisplay = findOrCreateChildWithClass(\n      this.element,\n      \"tempo-display\",\n      \"span\",\n    );\n    this.caretNISSInfo = findOrCreateChildWithClass(\n      this.element,\n      \"caret-niss-info\",\n      \"p\",\n    );\n    this.commutatorConjugateInfo = findOrCreateChildWithClass(\n      this.element,\n      \"commutator-conjugate-info\",\n      \"p\",\n    );\n    this.square1Info = findOrCreateChildWithClass(\n      this.element,\n      \"square1-info\",\n      \"p\",\n    );\n    this.hintFaceletCheckbox = findOrCreateChildWithClass(\n      this.element,\n      \"hint-facelets\",\n      \"input\",\n    );\n    this.tempoInput.addEventListener(\"input\", this.onTempoInput.bind(this));\n    this.hintFaceletCheckbox.addEventListener(\n      \"input\",\n      this.onHintFaceletInput.bind(this),\n    );\n\n    this.toolGrid = findOrCreateChildWithClass(\n      this.element,\n      \"tool-grid\",\n      \"button-grid\",\n    );\n    this.toolGrid.addEventListener(\"action\", this.onToolAction.bind(this));\n\n    this.examplesGrid = findOrCreateChildWithClass(\n      this.element,\n      \"examples-grid\",\n      \"button-grid\",\n    );\n    this.examplesGrid.addEventListener(\n      \"action\",\n      this.onExampleAction.bind(this),\n    );\n\n    this.twistyStreamSource = app.element.querySelector(\n      \"twisty-stream-source\",\n    ) as TwistyStreamSource;\n    this.twistyStreamSource.addEventListener(\"move\", this.onMove.bind(this));\n  }\n\n  private async onMove(\n    e: PuzzleStreamMoveEventRegisterCompatible,\n  ): Promise<void> {\n    const move = e.detail.move;\n    try {\n      this.twistyPlayer.experimentalAddMove(move, {\n        cancel: true,\n      }); // TODO\n    } catch (e) {\n      console.info(\"Ignoring move:\", move.toString());\n    }\n    // setURLParams({ alg });\n  }\n\n  private onTempoInput(): void {\n    const tempoScale = parseFloat(this.tempoInput.value);\n    this.twistyPlayer.tempoScale = tempoScale;\n    this.tempoDisplay.textContent = `${tempoScale}\u00D7`;\n  }\n\n  private onHintFaceletInput(): void {\n    this.twistyPlayer.hintFacelets = this.hintFaceletCheckbox.checked\n      ? \"floating\"\n      : \"none\";\n  }\n\n  private async onToolAction(\n    e: CustomEvent<{ action: string }>,\n  ): Promise<void> {\n    switch (e.detail.action) {\n      case \"expand\": {\n        this.twistyPlayer.alg = (\n          await this.twistyPlayer.experimentalModel.alg.get()\n        ).alg.expand();\n        break;\n      }\n      case \"simplify\": {\n        this.twistyPlayer.experimentalModel.alg.set(\n          (async () => {\n            const [algWithIssues, puzzleLoader] = await Promise.all([\n              this.twistyPlayer.experimentalModel.alg.get(),\n              this.twistyPlayer.experimentalModel.puzzleLoader.get(),\n            ]);\n            return algWithIssues.alg.experimentalSimplify({\n              cancel: true,\n              puzzleLoader,\n            });\n          })(),\n        );\n        break;\n      }\n      case \"clear\": {\n        this.twistyPlayer.alg = new Alg();\n        this.twistyPlayer.experimentalSetupAlg = new Alg();\n        this.twistyPlayer.experimentalTitle = null;\n        break;\n      }\n      case \"invert\": {\n        this.twistyPlayer.alg = (\n          await this.twistyPlayer.experimentalModel.alg.get()\n        ).alg.invert();\n        break;\n      }\n      case \"solve\": {\n        this.solve();\n        break;\n      }\n      case \"scramble\": {\n        this.scramble();\n        break;\n      }\n      case \"screenshot\": {\n        this.screenshot();\n        break;\n      }\n      case \"connect-input\": {\n        this.connectInput();\n        break;\n      }\n      default:\n        throw new Error(`Unknown tool action! ${e.detail.action}`);\n    }\n  }\n\n  private screenshot(): void {\n    this.app.twistyPlayer.experimentalDownloadScreenshot();\n  }\n\n  private connectInput(): void {\n    this.twistyStreamSource.style.setProperty(\"display\", \"inherit\");\n  }\n\n  private onExampleAction(e: CustomEvent<{ action: string }>): void {\n    const config = examples[e.detail.action];\n    this.twistyPlayer.alg = experimentalEnsureAlg(config.alg!);\n    this.twistyPlayer.experimentalSetupAlg = experimentalEnsureAlg(\n      config.experimentalSetupAlg!,\n    );\n    this.twistyPlayer.experimentalTitle = config.experimentalTitle ?? null;\n    // this.app.setSetupAnchor(config.experimentalSetupAnchor!, false);\n    // this.app.setStickering(config.experimentalStickering!, false);\n    // if (config.puzzle) {\n    //   this.setPuzzle(config.puzzle);\n    // }\n  }\n\n  private initializePuzzleSelect(initialPuzzleName: string): void {\n    this.puzzleSelect.textContent = \"\";\n    for (const [groupName, puzzles] of Object.entries(puzzleGroups)) {\n      const optgroup = this.puzzleSelect.appendChild(\n        document.createElement(\"optgroup\"),\n      );\n      optgroup.label = groupName;\n      for (const puzzleOptInfo of puzzles) {\n        const option = document.createElement(\"option\");\n        option.value = puzzleOptInfo.name;\n        option.textContent = `${puzzleOptInfo.symbol} ${supportedPuzzles[\n          puzzleOptInfo.name\n        ].displayName()}`;\n        optgroup.appendChild(option);\n        if (puzzleOptInfo.name === initialPuzzleName) {\n          option.selected = true;\n        }\n      }\n    }\n    this.puzzleSelect.addEventListener(\n      \"change\",\n      this.puzzleSelectChanged.bind(this),\n    );\n  }\n\n  private puzzleSelectChanged(): void {\n    const option = this.puzzleSelect.selectedOptions[0];\n    this.twistyPlayer.puzzle = option.value as PuzzleID;\n  }\n\n  private initializeSetupAnchorSelect(initialSetupAnchor: string): void {\n    this.setupAnchorSelect.textContent = \"\";\n    for (const setupAnchor of [\"start\", \"end\"]) {\n      const option = document.createElement(\"option\");\n      option.value = setupAnchor;\n      option.textContent = `anchored at ${setupAnchor}`; // TODO\n      this.setupAnchorSelect.appendChild(option);\n      if (setupAnchor === initialSetupAnchor) {\n        option.selected = true;\n      }\n    }\n    this.setupAnchorSelect.addEventListener(\n      \"change\",\n      this.setupAnchorSelectChanged.bind(this),\n    );\n  }\n\n  private setupAnchorSelectChanged(): void {\n    const option = this.setupAnchorSelect.selectedOptions[0];\n    this.twistyPlayer.experimentalSetupAnchor = option.value as SetupToLocation;\n  }\n\n  private async updateStickeringSelect(\n    initialStickering: string | null,\n    puzzleName: string,\n  ): Promise<void> {\n    initialStickering ??= \"full\";\n    let stickerings: Partial<Record<ExperimentalStickering, { name?: string }>>;\n\n    // TODO: Look\n    const p = puzzles[puzzleName];\n    if (p.stickerings) {\n      stickerings = {};\n      for (const stickering of await p.stickerings()) {\n        stickerings[stickering] = {};\n      }\n    } else {\n      stickerings = { full: {} } as any;\n    }\n\n    if (!(initialStickering in stickerings)) {\n      // TODO\n      (stickerings as any)[UNSUPPORTED_STICKERING] = {};\n      initialStickering = UNSUPPORTED_STICKERING;\n    }\n\n    this.stickeringSelect.textContent = \"\";\n    let currentOptGroup: HTMLOptGroupElement | null = null;\n    for (const [stickeringName, stickeringMask] of Object.entries(\n      stickerings,\n    )) {\n      const stickeringGroup =\n        stickeringName === UNSUPPORTED_STICKERING\n          ? \"Unsupported\"\n          : getStickeringGroup(stickeringName, puzzleName as PuzzleID);\n      if (!currentOptGroup || currentOptGroup.label !== stickeringGroup) {\n        currentOptGroup = this.stickeringSelect.appendChild(\n          document.createElement(\"optgroup\"),\n        );\n        currentOptGroup.label = stickeringGroup;\n      }\n      const option = document.createElement(\"option\");\n      option.value = stickeringName;\n      option.textContent = stickeringMask?.name ?? stickeringName;\n      currentOptGroup.appendChild(option);\n      if (stickeringName === initialStickering) {\n        option.selected = true;\n      }\n    }\n    this.stickeringSelect.addEventListener(\n      \"change\",\n      this.stickeringChanged.bind(this),\n    );\n  }\n\n  private stickeringChanged(): void {\n    this.twistyPlayer.experimentalStickering =\n      this.stickeringSelect.selectedOptions[0].value;\n  }\n\n  onPuzzle(puzzle: PuzzleID): void {\n    this.hintFaceletCheckbox.disabled = [\n      \"clock\",\n      \"square1\",\n      \"kilominx\",\n      \"redi_cube\",\n      \"melindas2x2x2x2\",\n    ].includes(puzzle);\n    this.toolGrid.setButtonEnabled(\n      \"solve\",\n      [\"2x2x2\", \"3x3x3\", \"skewb\", \"pyraminx\", \"megaminx\"].includes(puzzle),\n    );\n    this.toolGrid.setButtonEnabled(\n      \"scramble\",\n      Object.keys(SCRAMBLE_EVENTS).includes(puzzle),\n    );\n    // this.toolGrid.setButtonEnabled(\n    //   \"screenshot\",\n    //   ![\"clock\", \"square1\"].includes(puzzle),\n    // );\n  }\n}\n\nconst exclusiveExpandButtons: ExpandButton[] = [];\n\nclass ExpandButton extends HTMLElement {\n  associatedElem: HTMLElement | null = null;\n  expanded: boolean;\n  expandIcon: HTMLAnchorElement;\n  exclusive: boolean;\n  connectedCallback() {\n    const forID = this.getAttribute(\"for\");\n    this.associatedElem = forID ? document.getElementById(forID) : null;\n    this.expandIcon = this.querySelector(\".expand-icon\")!;\n    this.querySelector(\"a\")!.addEventListener(\"click\", this.onClick.bind(this));\n    this.expanded = this.getAttribute(\"expanded\") === \"true\";\n    this.exclusive = this.getAttribute(\"exclusive\") !== \"false\";\n    if (this.exclusive) {\n      exclusiveExpandButtons.push(this);\n    }\n  }\n\n  onClick(e: MouseEvent) {\n    e.preventDefault();\n    this.toggle();\n    if (this.exclusive) {\n      if (this.expanded) {\n        for (const expandButton of exclusiveExpandButtons) {\n          if (expandButton !== this) {\n            expandButton.toggle(false);\n          }\n        }\n      }\n    }\n  }\n\n  toggle(expand?: boolean): void {\n    this.expanded = expand ?? !this.expanded;\n    if (this.associatedElem) {\n      this.associatedElem.hidden = !this.expanded;\n    }\n    this.expandIcon.textContent = this.exclusive\n      ? this.expanded\n        ? \"\u25BF\"\n        : \"\u25B9\"\n      : this.expanded\n      ? \"\u25BE\"\n      : \"\u25B8\";\n  }\n}\n\ncustomElementsShim.define(\"expand-button\", ExpandButton);\n"],
  "mappings": "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",
  "names": ["pins", "backMoves", "frontMoves", "randomClockScrambleString", "filteringMoveCount", "randomSuffix", "amount", "randomUIntBelow", "moves", "side", "families", "family", "pin", "suffixes", "randomMegaminxScrambleString", "rdPair", "randomUIntBelow", "randomU", "row", "chunks", "i", "worker_threads_mangled", "worker_threads_unmangled", "useNodeWorkarounds", "nodeWorker", "source", "options", "NodeWorker", "worker", "node_adapter_default", "constructWorker", "blob", "exposeAPI", "getWorkerEntryFileURL", "MODULE_WORKER_TIMEOUT_MILLISECONDS", "instantiateModuleWorker", "resolve", "reject", "timeoutID", "workerEntryFileURL", "getWorkerEntryFileURL", "url", "importSrc", "blob", "worker", "constructWorker", "onError", "e", "onFirstMessage", "messageData", "wrapWithTerminate", "insideAPI", "wrap", "terminate", "instantiateClassicWorker", "workerSource", "allInsideOutsideAPIPromises", "instantiateWorker", "insideOutsideAPIPromise", "instantiateWorkerImplementation", "searchOutsideDebugGlobals", "instantiateWorkerImplementation", "searchOutsideDebugGlobals", "instantiateClassicWorker", "instantiateModuleWorker", "e", "commonErrorPrefix", "cachedWorkerInstance", "getCachedWorkerInstance", "instantiateWorker", "randomScrambleForEvent", "eventID", "Alg", "randomClockScrambleString", "randomMegaminxScrambleString", "wat", "_randomScrambleStringForEvent", "searchOutsideDebugGlobals", "instantiateWorker", "getCachedWorkerInstance", "experimentalSolve3x3x3IgnoringCenters", "state", "cwi", "getCachedWorkerInstance", "Alg", "experimentalSolve2x2x2", "solveSkewb", "solvePyraminx", "solveMegaminx", "searchOutsideDebugGlobals", "twistyStreamSourceCSS", "CSSSource", "BluetoothStreamSource", "puzzle", "e", "move", "Move", "KeyboardStreamSource", "TwistyStreamSource", "ManagedCustomElement", "twistyStreamSourceCSS", "bluetoothButton", "label", "sourceClass", "button", "source", "SENTINEL_VALUE", "select", "streamServer", "TwizzleStreamServer", "streams", "info", "stream", "firstSender", "option", "streamID", "moveEvent", "customElementsShim", "UNSUPPORTED_STICKERING", "algAppend", "oldAlg", "comment", "newAlg", "newAlgBuilder", "AlgBuilder", "Newline", "LineComment", "SCRAMBLE_EVENTS", "App", "element", "initialConfig", "findOrCreateChild", "spinner", "controlPaneElem", "ControlPane", "URLParamUpdater", "TwistyPlayer", "puzzleID", "currentAlgWithIssues", "currentAlg", "solution", "kpuzzle", "puzzles", "experimentalSolve2x2x2", "experimentalSolve3x3x3IgnoringCenters", "solveSkewb", "solvePyraminx", "solveMegaminx", "event", "randomScrambleForEvent", "ButtonGrid", "button", "id", "enabled", "customElementsShim", "app", "twistyPlayer", "solve", "scramble", "appTitleElem", "findOrCreateChildWithClass", "APP_TITLE", "title", "alg", "algFeatures", "computeAlgFeatures", "which", "url", "urlString", "competitionID", "algWithIssues", "countMovesETM", "anchor", "FreshListenerManager", "stickeringRequest", "move", "tempoScale", "puzzleLoader", "Alg", "config", "examples", "experimentalEnsureAlg", "initialPuzzleName", "groupName", "puzzleGroups", "optgroup", "puzzleOptInfo", "option", "supportedPuzzles", "initialSetupAnchor", "setupAnchor", "initialStickering", "puzzleName", "stickerings", "p", "stickering", "currentOptGroup", "stickeringName", "stickeringMask", "stickeringGroup", "getStickeringGroup", "puzzle", "exclusiveExpandButtons", "ExpandButton", "forID", "e", "expandButton", "expand"]
}
