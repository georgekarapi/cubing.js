import{c as h,g as y}from"./chunk-M4RMC74E.js";import{a as g}from"./chunk-2TSBH4C3.js";import{a as n,c as o,d as l}from"./chunk-MQMMWHJK.js";import{b as m}from"./chunk-D3X4C52T.js";import{d as z,e as r}from"./chunk-WRADJ54S.js";var w=class{constructor(){this.twistyPlayer=g(),this.twistyPlayer.experimentalSetFlashLevel("none"),document.querySelector("#twisty-wrapper")?.appendChild(this.twistyPlayer),this.twistyAlgEditor=document.querySelector("twisty-alg-editor"),this.twistyAlgEditor.debugNeverRequestTimestamp=!0,this.twistyAlgEditor.twistyPlayer=this.twistyPlayer,this.configUI=new c(this),new u(this);let t=document.querySelector("#move-count");this.twistyPlayer.experimentalModel.moveCount.addFreshListener(e=>{t.textContent=`Moves: ${e}`}),this.dialog=new p;let s=document.querySelector("twisty-puzzle-description-input");this.twistyPlayer.experimentalModel.puzzleLoader.addFreshListener(async e=>{s.puzzleDescription=(await e.pg()).puzzleDescription}),s.addEventListener("puzzle-change",e=>{this.setPuzzleDescription(e.detail.descriptionString)})}async puzzleGeometry(){let t=await this.twistyPlayer.experimentalModel.puzzleLoader.get();if(!t.pg)throw new Error("could not get PG from puzzle loader");return t.pg()}setPuzzleName(t){let s=r(t);this.configUI.descInput.value=s,this.twistyPlayer.experimentalModel.setupTransformation.set(null),o(!0),this.twistyPlayer.experimentalPuzzleDescription=s,l({puzzle:t,"puzzle-description":""})}setPuzzleDescription(t){this.configUI.puzzleNameSelect.value="",this.twistyPlayer.experimentalModel.setupTransformation.set(null),o(!0),this.twistyPlayer.experimentalPuzzleDescription=t,this.configUI.descInput.value=t,l({puzzle:"","puzzle-description":t})}showText(t){navigator.clipboard.writeText(t),this.dialog.show(t)}},p=class{constructor(){this.dialogElement=document.querySelector("#stuff-for-nerds");this.textarea=this.dialogElement.querySelector("textarea")}show(t){this.textarea.value=t,this.dialogElement.showModal()}},c=class{constructor(t){this.app=t;this.puzzleNameSelect=document.body.querySelector("#puzzle-name");this.scrambleButton=document.body.querySelector("#scramble");this.resetButton=document.body.querySelector("#reset");this.toggleButton=document.body.querySelector("#config-toggle");this.descWrapper=document.body.querySelector("#puzzle-description-wrapper");this.descInput=document.body.querySelector("#puzzle-description-string");this.optionsContainer=document.body.querySelector("#main-config");this.showing=!1;this.toggleButton.addEventListener("click",()=>{this.showing=!this.showing,this.descWrapper.toggleAttribute("hidden",!this.showing),this.optionsContainer.toggleAttribute("hidden",!this.showing)});for(let e of Object.keys(z())){let i=document.createElement("option");i.value=e,i.textContent=e,this.puzzleNameSelect.appendChild(i)}let s=n("puzzle-description");if(n("puzzle-description"))this.descInput.value=s,this.descWrapper.hidden=!1;else{let e=n("puzzle");e||(e="3x3x3"),this.puzzleNameSelect.value=e,this.descInput.value=r(e)}this.scrambleButton.addEventListener("click",async()=>{this.app.twistyPlayer.experimentalModel.setupTransformation.set((async()=>{let e=await this.app.twistyPlayer.experimentalModel.puzzleLoader.get(),i=await e.pg(),P=await e.kpuzzle(),b=i.getScramble();return o(!1),new m(P,b)})())}),this.resetButton.addEventListener("click",()=>{this.app.twistyPlayer.alg="",this.app.twistyPlayer.experimentalModel.setupTransformation.set(null),o(!0)}),this.puzzleNameSelect.addEventListener("change",()=>{this.app.setPuzzleName(this.puzzleNameSelect.value)}),this.descInput.addEventListener("input",()=>{this.app.setPuzzleDescription(this.descInput.value)})}},u=class{constructor(t){this.app=t;document.body.querySelector("#actions").addEventListener("change",this.onChange.bind(this)),document.body.querySelector("#move-input").addEventListener("change",this.onChange.bind(this))}async onChange(t){let s=t.target.value;switch(document.body.querySelector("#actions").value="",document.body.querySelector("#move-input").value="",s){case"gap":{this.app.showText((await this.app.puzzleGeometry()).writegap());break}case"ss":{let e=[];(await this.app.puzzleGeometry()).writeSchreierSims(i=>e.push(i)),this.app.showText(e.join(`
`));break}case"canon":{let e=[];(await this.app.puzzleGeometry()).showcanon(i=>e.push(i)),this.app.showText(e.join(`
`));break}case"ksolve":{this.app.showText((await this.app.puzzleGeometry()).writeksolve("TwizzlePuzzle"));break}case"svg":{let e=await this.app.twistyPlayer.experimentalModel.visualizationFormat.get()!=="2D";this.app.showText((await this.app.puzzleGeometry()).generatesvg(800,500,10,e));break}case"summary":{this.app.showText((await(await this.app.twistyPlayer.experimentalModel.puzzleLoader.get()).pg()).textForTwizzleExplorer());break}case"screenshot":case"screenshot-back":{this.app.twistyPlayer.experimentalDownloadScreenshot();break}case"bluetooth":case"keyboard":{(async()=>(await(s==="bluetooth"?y:h)()).addAlgLeafListener(i=>{this.app.twistyPlayer.experimentalAddAlgLeaf(i.latestAlgLeaf)}))();break}default:alert(`Action ${s} not handled yet.`)}}},d=class extends HTMLElement{connectedCallback(){let t=this.querySelectorAll("panel-selector button");for(let s of Array.from(t))s.addEventListener("click",()=>{this.showTab(s.getAttribute("data-tab-id"))})}showTab(t){for(let s of Array.from(this.querySelector("panel-tabs").children))s.hidden=!0;document.getElementById(t).hidden=!1}};customElements.define("side-panel",d);export{w as a};
//# sourceMappingURL=chunk-4U2A4CQH.js.map
