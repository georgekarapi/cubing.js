{
  "version": 3,
  "sources": ["../../../../../../src/sites/experiments.cubing.net/cubing.js/twisty/twisty-player-props/index.ts"],
  "sourcesContent": ["// Stub file for testing.\n// Feel free to add code here if you need a quick place to run some code, but avoid committing any changes.\n\nimport { Alg } from \"../../../../../cubing/alg\";\nimport { experimentalStickerings } from \"../../../../../cubing/puzzles/cubing-private\";\nimport {\n  backViewLayouts,\n  setTwistyDebug,\n  TwistyPlayer,\n} from \"../../../../../cubing/twisty\";\nimport { hintFaceletStyles } from \"../../../../../cubing/twisty/model/props/puzzle/display/HintFaceletProp\";\nimport { dragInputModes } from \"../../../../../cubing/twisty/model/props/puzzle/state/DragInputProp\";\nimport { indexerStrategyNames } from \"../../../../../cubing/twisty/model/props/puzzle/state/IndexerConstructorRequestProp\";\nimport { movePressInputNames } from \"../../../../../cubing/twisty/model/props/puzzle/state/MovePressInputProp\";\nimport { setupToLocations } from \"../../../../../cubing/twisty/model/props/puzzle/state/SetupAnchorProp\";\nimport {\n  PuzzleID,\n  puzzleIDs,\n} from \"../../../../../cubing/twisty/model/props/puzzle/structure/PuzzleIDRequestProp\";\nimport { backgroundThemes } from \"../../../../../cubing/twisty/model/props/viewer/BackgroundProp\";\nimport { controlsLocations } from \"../../../../../cubing/twisty/model/props/viewer/ControlPanelProp\";\nimport { viewerLinkPages } from \"../../../../../cubing/twisty/model/props/viewer/ViewerLinkProp\";\nimport { visualizationFormats } from \"../../../../../cubing/twisty/model/props/viewer/VisualizationProp\";\nimport { TwistyPlayerDebugger } from \"./TwistyPropDebugger\";\n\nsetTwistyDebug({ showRenderStats: true });\n\n// alg=\"y' y' U' E D R2 r2 F2 B2 U E D' R2 L2' z2 S2 U U D D S2 F2' B2\"\n// control-panelly=\"none\"\n// background=\"none\"\n// experimental-stickering=\"picture\"\n\n(async () => {\n  const puzzle = (new URL(location.href).searchParams.get(\"puzzle\") ??\n    \"gigaminx\") as PuzzleID;\n\n  const twistyPlayer = document.body.appendChild(new TwistyPlayer({ puzzle }));\n  document.body.appendChild(new TwistyPlayerDebugger(twistyPlayer));\n\n  const alg =\n    puzzle === \"gigaminx\"\n      ? \"(BL2 B2' DL2' B' BL' B' DL2' BL2 B' BL2' B2 BL DL2 B' DL BL B' BL2 DR2 U' (F2 FR2' D2 FR L2' 1-4BR 1-4R2' U)5 F2 FR2' D2 FR L2' 1-4BR 1-4R2' U2 2DR2 u2' 1-3R2 1-3BR' l2 fr' d2' fr2 f2' (u' 1-3R2 1-3BR' l2 fr' d2' fr2 f2')5 u dr2' bl2' b bl' dl' b dl2' bl' b2' bl2 b bl2' dl2 b bl b dl2 b2 bl2')\"\n      : \"y' y' U' E D R2 r2 F2 B2 U E D' R2 L2' z2 S2 U U D D S2 F2' B2\";\n  twistyPlayer.alg = alg;\n\n  document.body.appendChild(document.createElement(\"h1\")).textContent =\n    \"<twisty-player>\";\n\n  const tableWrapper = document.body.appendChild(document.createElement(\"div\"));\n  tableWrapper.id = \"inputs\";\n  const table = tableWrapper.appendChild(document.createElement(\"table\"));\n\n  const algOptions: [string, string, Alg][] = [\n    [\"alg\", \"alg\", Alg.fromString(alg)],\n    [\"experimentalSetupAlg\", \"setupAlg\", Alg.fromString(\"\")],\n  ];\n\n  for (const [propName, attrName, alg] of algOptions) {\n    const tr = table.appendChild(document.createElement(\"tr\"));\n\n    const td1 = tr.appendChild(document.createElement(\"td\"));\n    td1.appendChild(document.createElement(\"code\")).textContent = attrName;\n\n    const td2 = tr.appendChild(document.createElement(\"td\"));\n    const input = td2.appendChild(document.createElement(\"input\"));\n    input.value = alg.toString();\n    input.placeholder = \"(none)\";\n    const update = () => {\n      console.log(propName, input.value);\n      (twistyPlayer as any)[propName] = input.value;\n    };\n    input.addEventListener(\"change\", update);\n    input.addEventListener(\"keyup\", update);\n    update();\n  }\n\n  const enumOptions: [string, string, Record<string, any>, string?][] = [\n    [\"anchor\", \"anchor\", setupToLocations],\n    [\"puzzle\", \"puzzle\", puzzleIDs, puzzle],\n    [\n      \"visualization\",\n      \"visualization\",\n      Object.assign({ auto: true }, visualizationFormats),\n    ],\n    [\n      \"hintFacelets\",\n      \"hint-facelets\",\n      Object.assign({ auto: true }, hintFaceletStyles),\n    ],\n    [\n      \"experimentalStickering\",\n      \"experimental-stickering\",\n      experimentalStickerings,\n    ],\n\n    [\n      \"background\",\n      \"background\",\n      Object.assign({ auto: true }, backgroundThemes),\n    ],\n    [\n      \"controlPanel\",\n      \"control-panel\",\n      Object.assign({ auto: true }, controlsLocations),\n    ],\n\n    [\"backView\", \"back-view\", Object.assign({ auto: true }, backViewLayouts)],\n\n    [\n      \"experimentalDragInput\",\n      \"experimental-drag-input\",\n      Object.assign({ auto: true }, dragInputModes),\n    ],\n\n    [\"indexer\", \"indexer\", Object.assign({ auto: true }, indexerStrategyNames)],\n\n    [\n      \"experimentalMovePressInput\",\n      \"experimental-move-press-input\",\n      Object.assign({ auto: true }, movePressInputNames),\n    ],\n\n    [\n      \"viewerLink\",\n      \"viewer-link\",\n      Object.assign({ auto: true }, viewerLinkPages),\n    ],\n  ];\n\n  for (const [propName, attrName, valueMap, defaultValue] of enumOptions) {\n    const tr = table.appendChild(document.createElement(\"tr\"));\n\n    const td1 = tr.appendChild(document.createElement(\"td\"));\n    td1.appendChild(document.createElement(\"code\")).textContent = attrName;\n\n    const td2 = tr.appendChild(document.createElement(\"td\"));\n    const select = document.createElement(\"select\");\n    td2.appendChild(select);\n\n    for (const value in valueMap) {\n      const optionElem = select.appendChild(document.createElement(\"option\"));\n      optionElem.textContent = value;\n      optionElem.value = value;\n\n      if (value === defaultValue) {\n        optionElem.selected = true;\n      }\n    }\n    select.addEventListener(\"change\", () => {\n      console.log(attrName, select.value);\n      if (propName in twistyPlayer) {\n        (twistyPlayer as any)[propName] = select.value as any;\n      } else {\n        console.error(\"Invalid prop name!\", propName);\n      }\n    });\n  }\n\n  const numberOptions: [string, string, number | null, number | null][] = [\n    [\"cameraLatitude\", \"camera-latitude\", null, null],\n    [\"cameraLongitude\", \"camera-longitude\", null, null],\n    [\"cameraDistance\", \"camera-distance\", 6, null],\n    [\"cameraLatitudeLimit\", \"camera-latitude-limit\", 35, null],\n    [\"tempoScale\", \"tempo-scale\", 1, 0.1],\n  ];\n\n  for (const [propName, attrName, initialValue, step] of numberOptions) {\n    const tr = table.appendChild(document.createElement(\"tr\"));\n\n    const td1 = tr.appendChild(document.createElement(\"td\"));\n    td1.appendChild(document.createElement(\"code\")).textContent = attrName;\n\n    const td2 = tr.appendChild(document.createElement(\"td\"));\n    const input = td2.appendChild(document.createElement(\"input\"));\n    if (initialValue !== null) {\n      input.value = initialValue.toString();\n    }\n    input.type = \"number\";\n    input.placeholder = \"(no value)\";\n    if (step !== null) {\n      input.step = step.toString();\n    }\n    const update = () => {\n      if (input.value === \"\") {\n        return;\n      }\n      if (propName in twistyPlayer) {\n        (twistyPlayer as any)[propName] = input.value;\n      } else {\n        console.error(\"Invalid prop name!\", propName);\n      }\n    };\n    input.addEventListener(\"input\", update);\n    // input.addEventListener(\"change\", update);\n    input.addEventListener(\"keyup\", update);\n  }\n})();\n"],
  "mappings": "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",
  "names": ["setTwistyDebug", "puzzle", "twistyPlayer", "TwistyPlayer", "TwistyPlayerDebugger", "alg", "tableWrapper", "table", "algOptions", "Alg", "propName", "attrName", "tr", "td1", "input", "update", "enumOptions", "setupToLocations", "puzzleIDs", "visualizationFormats", "hintFaceletStyles", "experimentalStickerings", "backgroundThemes", "controlsLocations", "backViewLayouts", "dragInputModes", "indexerStrategyNames", "movePressInputNames", "viewerLinkPages", "valueMap", "defaultValue", "td2", "select", "value", "optionElem", "numberOptions", "initialValue", "step"]
}
