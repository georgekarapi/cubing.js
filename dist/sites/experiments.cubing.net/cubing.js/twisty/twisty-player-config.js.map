{
  "version": 3,
  "sources": ["../../../../../src/sites/experiments.cubing.net/cubing.js/twisty/twisty-player-config.ts"],
  "sourcesContent": ["import { Alg } from \"../../../../cubing/alg\";\nimport { backViewLayouts, TwistyPlayer } from \"../../../../cubing/twisty\";\nimport { setupToLocations } from \"../../../../cubing/twisty/model/props/puzzle/state/SetupAnchorProp\";\nimport { puzzleIDs } from \"../../../../cubing/twisty/model/props/puzzle/structure/PuzzleIDRequestProp\";\nimport { hintFaceletStyles } from \"../../../../cubing/twisty/model/props/puzzle/display/HintFaceletProp\";\nimport { backgroundThemes } from \"../../../../cubing/twisty/model/props/viewer/BackgroundProp\";\nimport { controlsLocations } from \"../../../../cubing/twisty/model/props/viewer/ControlPanelProp\";\nimport { viewerLinkPages } from \"../../../../cubing/twisty/model/props/viewer/ViewerLinkProp\";\nimport { visualizationFormats } from \"../../../../cubing/twisty/model/props/viewer/VisualizationProp\";\nimport { dragInputModes } from \"../../../../cubing/twisty/model/props/puzzle/state/DragInputProp\";\nimport { experimentalStickerings } from \"../../../../cubing/puzzles/cubing-private\";\n\nconst contentElem = document.querySelector(\".content\")!;\n\nconst twistyPlayer: TwistyPlayer = new TwistyPlayer();\ncontentElem.appendChild(twistyPlayer);\n\nconst table = contentElem.appendChild(document.createElement(\"table\"));\n\nconst algOptions: [string, string, Alg][] = [\n  [\"alg\", \"alg\", Alg.fromString(\"R U R'\")],\n  [\"experimentalSetupAlg\", \"experimental-setup-alg\", Alg.fromString(\"\")],\n];\n\nfor (const [propName, attrName, alg] of algOptions) {\n  const tr = table.appendChild(document.createElement(\"tr\"));\n\n  const td1 = tr.appendChild(document.createElement(\"td\"));\n  td1.appendChild(document.createElement(\"code\")).textContent = attrName;\n\n  const td2 = tr.appendChild(document.createElement(\"td\"));\n  const input = td2.appendChild(document.createElement(\"input\"));\n  input.value = alg.toString();\n  input.placeholder = \"(none)\";\n  const update = () => {\n    (twistyPlayer as any)[propName] = Alg.fromString(input.value);\n  };\n  input.addEventListener(\"change\", update);\n  input.addEventListener(\"keyup\", update);\n  update();\n}\n\nconst enumOptions: [string, string, Record<string, any>][] = [\n  [\"experimentalSetupAnchor\", \"experimental-setup-anchor\", setupToLocations],\n  [\"puzzle\", \"puzzle\", puzzleIDs],\n  [\"visualization\", \"visualization\", visualizationFormats],\n  [\"hintFacelets\", \"hint-facelets\", hintFaceletStyles],\n  [\n    \"experimentalStickering\",\n    \"experimental-stickering\",\n    experimentalStickerings,\n  ],\n\n  [\"background\", \"background\", backgroundThemes],\n  [\"controlPanel\", \"control-panel\", controlsLocations],\n\n  [\"backView\", \"back-view\", backViewLayouts],\n\n  [\n    \"experimentalDragInput\",\n    \"experimental-drag-input\",\n    Object.assign({ auto: true }, dragInputModes),\n  ],\n\n  [\"viewerLink\", \"viewer-link\", viewerLinkPages],\n];\n\nfor (const [propName, attrName, valueMap] of enumOptions) {\n  const tr = table.appendChild(document.createElement(\"tr\"));\n\n  const td1 = tr.appendChild(document.createElement(\"td\"));\n  td1.appendChild(document.createElement(\"code\")).textContent = attrName;\n\n  const td2 = tr.appendChild(document.createElement(\"td\"));\n  const select = document.createElement(\"select\");\n  td2.appendChild(select);\n\n  for (const value in valueMap) {\n    const optionElem = select.appendChild(document.createElement(\"option\"));\n    optionElem.textContent = value;\n    optionElem.value = value;\n  }\n  select.addEventListener(\"change\", () => {\n    console.log(attrName, select.value);\n    (twistyPlayer as any)[propName] = select.value as any;\n  });\n  contentElem.append(document.createElement(\"br\"));\n}\n\nconst numberOptions: [string, string, number][] = [\n  [\"cameraLatitude\", \"camera-latitude\", 0],\n  [\"cameraLongitude\", \"camera-longitude\", 0],\n  [\"cameraLatitudeLimit\", \"camera-latitude-limit\", 35],\n];\n\nfor (const [propName, attrName, alg] of numberOptions) {\n  const tr = table.appendChild(document.createElement(\"tr\"));\n\n  const td1 = tr.appendChild(document.createElement(\"td\"));\n  td1.appendChild(document.createElement(\"code\")).textContent = attrName;\n\n  const td2 = tr.appendChild(document.createElement(\"td\"));\n  const input = td2.appendChild(document.createElement(\"input\"));\n  input.value = alg.toString();\n  input.type = \"number\";\n  input.placeholder = \"(no value)\";\n  input.value = \"\";\n  const update = () => {\n    if (input.value === \"\") {\n      return;\n    }\n    (twistyPlayer as any)[propName] = input.value;\n  };\n  input.addEventListener(\"input\", update);\n  // input.addEventListener(\"change\", update);\n  input.addEventListener(\"keyup\", update);\n}\n"],
  "mappings": "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",
  "names": ["contentElem", "twistyPlayer", "TwistyPlayer", "table", "algOptions", "Alg", "propName", "attrName", "alg", "tr", "td1", "input", "update", "enumOptions", "setupToLocations", "puzzleIDs", "visualizationFormats", "hintFaceletStyles", "experimentalStickerings", "backgroundThemes", "controlsLocations", "backViewLayouts", "dragInputModes", "viewerLinkPages", "valueMap", "td2", "select", "value", "optionElem", "numberOptions"]
}
