{
  "version": 3,
  "sources": ["../../../../../src/sites/experiments.cubing.net/cubing.js/twsearch/index.ts"],
  "sourcesContent": ["import { cube2x2x2 } from \"../../../../cubing/puzzles\";\nimport { experimentalSolveTwsearch } from \"../../../../cubing/search\";\nimport { randomScrambleForEvent } from \"../../../../cubing/search/outside\";\n\n(async () => {\n  const scramble222 = await randomScrambleForEvent(\"222\");\n  scramble222.log();\n  (await randomScrambleForEvent(\"333\")).log();\n\n  const kpuzzle2x2x2 = await cube2x2x2.kpuzzle();\n  const scramble222Transformation =\n    kpuzzle2x2x2.algToTransformation(scramble222);\n  const scramble222Solution = await experimentalSolveTwsearch(\n    kpuzzle2x2x2,\n    scramble222Transformation.toKState(),\n    { moveSubset: \"ULFR\".split(\"\"), minDepth: 11 },\n  );\n  scramble222.concat(\".\").concat(scramble222Solution).log();\n  if (\n    !scramble222Transformation\n      .applyAlg(scramble222Solution)\n      .isIdentical(kpuzzle2x2x2.identityTransformation())\n  ) {\n    throw new Error(\"Invalid solution!\");\n  }\n})();\n"],
  "mappings": "oZAIC,SAAY,CACX,IAAMA,EAAc,MAAMC,EAAuB,KAAK,EACtDD,EAAY,IAAI,GACf,MAAMC,EAAuB,KAAK,GAAG,IAAI,EAE1C,IAAMC,EAAe,MAAMC,EAAU,QAAQ,EACvCC,EACJF,EAAa,oBAAoBF,CAAW,EACxCK,EAAsB,MAAMC,EAChCJ,EACAE,EAA0B,SAAS,EACnC,CAAE,WAAY,OAAO,MAAM,EAAE,EAAG,SAAU,EAAG,CAC/C,EAEA,GADAJ,EAAY,OAAO,GAAG,EAAE,OAAOK,CAAmB,EAAE,IAAI,EAEtD,CAACD,EACE,SAASC,CAAmB,EAC5B,YAAYH,EAAa,uBAAuB,CAAC,EAEpD,MAAM,IAAI,MAAM,mBAAmB,CAEvC,GAAG",
  "names": ["scramble222", "randomScrambleForEvent", "kpuzzle2x2x2", "cube2x2x2", "scramble222Transformation", "scramble222Solution", "solveTwsearch"]
}
