{
  "version": 3,
  "sources": ["../../../../src/sites/experiments.cubing.net/cubing.js/twisty/twisty-player-props/TwistyPropDebugger.ts"],
  "sourcesContent": ["import type { Alg } from \"../../../../../cubing/alg\";\nimport { experimentalCountMoves } from \"../../../../../cubing/notation\";\nimport { ClassListManager } from \"../../../../../cubing/twisty/views/ClassListManager\";\nimport {\n  CSSSource,\n  ManagedCustomElement,\n} from \"../../../../../cubing/twisty/views/ManagedCustomElement\";\nimport { customElementsShim } from \"../../../../../cubing/twisty/views/node-custom-element-shims\";\nimport type { TwistyPlayer } from \"../../../../../cubing/twisty/views/TwistyPlayer\";\nimport type { AlgIssues } from \"../../../../../cubing/twisty/model/props/puzzle/state/AlgProp\";\nimport { TwistyPropParent } from \"../../../../../cubing/twisty/model/props/TwistyProp\";\n\nfunction truncateAlgForDisplay(alg: Alg): string {\n  let str = alg.toString();\n  if (str.length < 50) {\n    return str;\n  }\n  str = str.slice(0, 50);\n  const lastSpace = str.lastIndexOf(\" \");\n  if (lastSpace !== -1) {\n    str = `${str.slice(0, lastSpace)}\u2026`;\n  }\n  return str;\n}\n\nexport class TwistyPropDebugger extends ManagedCustomElement {\n  constructor(private name: string, public twistyProp: TwistyPropParent<any>) {\n    super();\n  }\n\n  valueElem: HTMLElement | null = null;\n\n  connectedCallback(): void {\n    const span = document.createElement(\"span\");\n    span.textContent = this.name;\n    this.contentWrapper.append(span);\n\n    this.valueElem = this.contentWrapper.appendChild(\n      document.createElement(\"div\"),\n    );\n    this.twistyProp.addRawListener(this.onPropRaw.bind(this));\n    this.twistyProp.addFreshListener(this.onProp.bind(this));\n\n    this.addCSS(\n      new CSSSource(\n        `\n\n.wrapper {\n  font-family: Ubuntu, sans-serif;\n  display: grid;\n  grid-template-rows: 1.5em 3.5em;\n  max-width: 20em;\n\n  border: 2px solid #ddd;\n  overflow: hidden;\n  box-sizing: border-box;\n\n  cursor: pointer;\n}\n\n.wrapper > :nth-child(2) {\n  border-top: 1px solid #000;\n  width: 100%;\n  height: 3.5em;\n  overflow-wrap: anywhere;\n  padding: 0.25em;\n}\n\n.wrapper > span {\n  padding: 0.25em;\n  max-width: 100%;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  line-height: 1em;\n}\n\n.wrapper.highlight-de-emphasize {\n  opacity: 0.25;\n}\n\n/* .wrapper:hover > span::before { content: \"\u2B50\uFE0F \"; margin-right: 0.1em; } */\n\n.wrapper.highlight-grandchild-or-further,\n.wrapper.highlight-grandparent-or-further                { background: rgba(0, 0, 0, 0.2); }\n.wrapper.highlight-grandparent-or-further > span::before { content: \"\u23EC \"; margin-right: 0.1em; }\n\n.wrapper.highlight-child,\n.wrapper.highlight-parent                { background: rgba(0, 0, 0, 0.6); color: white; }\n.wrapper.highlight-parent > span::before { content: \"\uD83D\uDD3D \"; margin-right: 0.1em; }\n\n.wrapper.highlight-self                { background: rgba(0, 0, 0, 0.8); color: white; }\n.wrapper.highlight-self > span::before { content: \"\u2B50\uFE0F \"; margin-right: 0.1em; }\n\n.wrapper.highlight-child > span::before { content: \"\uD83D\uDD3C \"; margin-right: 0.1em; }\n\n.wrapper.highlight-grandchild-or-further > span::before { content: \"\u23EB \"; margin-right: 0.1em; }\n\n.wrapper:hover {\n  border: 2px solid #000;\n  opacity: 1;\n}\n\n.wrapper.highlight-self:hover {\n  /* border: 2px solid #f00; */\n}\n.wrapper.highlight-self:hover > span::before { content: \"\uD83C\uDF1F \"; margin-right: 0.1em; }\n\n    `,\n      ),\n    );\n  }\n\n  async onPropRaw(): Promise<void> {\n    // TODO: Animate `opacity` on overlapping elements for better perf.\n    this.valueElem?.animate(\n      [\n        // keyframes\n        { background: \"rgba(244, 133, 66, 0.4)\" },\n        { background: \"transparent\" },\n      ],\n      {\n        duration: 500,\n      },\n    );\n  }\n\n  async onProp(value: any): Promise<void> {\n    // console.log(\"onProp\", value, this.valueElem, JSON.stringify(value));\n\n    function isAlgIssues(v: any): boolean {\n      try {\n        return v instanceof Object && \"alg\" in v && \"issues\" in v;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    let str: string;\n    try {\n      if (typeof value === \"undefined\") {\n        str = \"(undefined)\";\n      } else if (isAlgIssues(value)) {\n        const typedAlgIssues = value.issues as AlgIssues;\n        str = \"Alg\";\n        if (typedAlgIssues.errors.length > 0) {\n          str += ` \uD83D\uDEA8 ${typedAlgIssues.errors[0]}`;\n        } else {\n          const numMoves = experimentalCountMoves(value.alg);\n          str += ` (${numMoves} moves)`;\n          if (numMoves > 0) {\n            str += `: ${truncateAlgForDisplay(value.alg)}`;\n          }\n        }\n        if (typedAlgIssues.warnings.length > 0) {\n          str += ` \u26A0\uFE0F ${typedAlgIssues.warnings[0]}`;\n        }\n      } else {\n        const str1 = JSON.stringify(value);\n        if (typeof str1 === \"undefined\") {\n          if (value.name) {\n            str = `${value.name as string} (constructor)`;\n          } else {\n            str = \"(undefined)\";\n          }\n        } else {\n          str = str1.slice(0, 100);\n        }\n      }\n    } catch (e) {\n      str = \"(can't be serialized)\";\n    }\n\n    if (this.valueElem) {\n      this.valueElem.textContent = str;\n    }\n\n    // TODO: Animate `opacity` on overlapping elements for better perf.\n    this.valueElem?.animate(\n      [\n        // keyframes\n        { background: \"rgba(90, 160, 253, 0.4)\" },\n        { background: \"transparent\" },\n      ],\n      {\n        duration: 500,\n      },\n    );\n  }\n\n  #highlightClassManager = new ClassListManager(this, \"highlight-\", [\n    \"de-emphasize\",\n    \"grandparent-or-further\",\n    \"parent\",\n    \"self\",\n    \"child\",\n    \"grandchild-or-further\",\n  ]);\n\n  setHighlight(\n    highlightType:\n      | \"de-emphasize\"\n      | \"grandparent-or-further\"\n      | \"parent\"\n      | \"self\"\n      | \"child\"\n      | \"grandchild-or-further\"\n      | null,\n  ): void {\n    if (highlightType !== null) {\n      this.#highlightClassManager.setValue(highlightType);\n    } else {\n      this.#highlightClassManager.clearValue();\n    }\n  }\n}\n\ncustomElementsShim.define(\"twisty-prop-debugger\", TwistyPropDebugger);\n\nexport class TwistyPlayerDebugger extends ManagedCustomElement {\n  constructor(private player: TwistyPlayer) {\n    super({ mode: \"open\" });\n  }\n\n  connectedCallback(): void {\n    this.addCSS(\n      new CSSSource(\n        `\n.wrapper {\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(12em, 1fr));\n}\n\ntwisty-prop-debugger.hidden {\n  /* display: none; */\n}\n\ntwisty-prop-debugger.first-in-group,\ntwisty-prop-debugger.highlighted {\n  /* grid-column-start: 1; */\n}\n\ntwisty-prop-debugger.highlighted {\n  /* grid-column: 1 / -1; */\n  /* margin: 1em 0; */\n}\n`,\n      ),\n    );\n\n    for (const [key, value] of Object.entries(\n      this.player.experimentalModel,\n    ).concat(Object.entries(this.player.experimentalModel.twistySceneModel))) {\n      if (value instanceof TwistyPropParent) {\n        const twistyPropDebugger = this.addElement(\n          new TwistyPropDebugger(key, value),\n        );\n        this.twistyPropDebuggers.set(value, twistyPropDebugger);\n        this.parentPropElems.set(twistyPropDebugger, new Set());\n        this.childPropElems.set(twistyPropDebugger, new Set());\n\n        twistyPropDebugger.addEventListener(\"click\", () => {\n          this.highlightFamilyTree(twistyPropDebugger);\n        });\n      }\n    }\n\n    for (const twistyPropDebuggerParent of this.twistyPropDebuggers.values()) {\n      for (const childProp of twistyPropDebuggerParent.twistyProp.debugGetChildren()) {\n        const childElem = this.twistyPropDebuggers.get(childProp)!;\n        if (!childElem) {\n          throw new Error(\"inconsistency!\");\n        }\n        this.parentPropElems.get(childElem)!.add(twistyPropDebuggerParent);\n        this.childPropElems.get(twistyPropDebuggerParent)!.add(childElem);\n      }\n    }\n  }\n\n  twistyPropDebuggers: Map<TwistyPropParent<any>, TwistyPropDebugger> =\n    new Map();\n\n  parentPropElems: Map<TwistyPropDebugger, Set<TwistyPropDebugger>> = new Map();\n  childPropElems: Map<TwistyPropDebugger, Set<TwistyPropDebugger>> = new Map();\n\n  currentHighlighted: TwistyPropDebugger | null = null;\n  highlightFamilyTree(prop: TwistyPropDebugger) {\n    if (this.currentHighlighted === prop) {\n      for (const propToClear of this.twistyPropDebuggers.values()) {\n        propToClear.setHighlight(null);\n        propToClear.classList.remove(\"hidden\");\n        propToClear.classList.remove(\"first-in-group\");\n        propToClear.classList.remove(\"highlighted\");\n      }\n      this.currentHighlighted = null;\n      return;\n    }\n\n    for (const propToClear of this.twistyPropDebuggers.values()) {\n      propToClear.setHighlight(\"de-emphasize\");\n      propToClear.classList.add(\"hidden\");\n      propToClear.classList.remove(\"first-in-group\");\n      propToClear.classList.remove(\"highlighted\");\n    }\n\n    prop.setHighlight(\"self\");\n    prop.classList.remove(\"hidden\");\n    prop.classList.add(\"highlighted\");\n    this.currentHighlighted = prop;\n\n    const children = this.childPropElems.get(prop)!;\n    let firstInGroup: boolean = true;\n    for (const descendant of this.getDescendants(prop)) {\n      descendant.setHighlight(\n        children.has(descendant) ? \"child\" : \"grandchild-or-further\",\n      );\n      descendant.classList.remove(\"hidden\");\n      if (firstInGroup) {\n        descendant.classList.add(\"first-in-group\");\n        firstInGroup = false;\n      }\n    }\n\n    const parents = this.parentPropElems.get(prop)!;\n    firstInGroup = true;\n    for (const ancestor of this.getAncestors(prop)) {\n      ancestor.setHighlight(\n        parents.has(ancestor) ? \"parent\" : \"grandparent-or-further\",\n      );\n      ancestor.classList.remove(\"hidden\");\n      if (firstInGroup) {\n        ancestor.classList.add(\"first-in-group\");\n        firstInGroup = false;\n      }\n    }\n  }\n\n  getDescendants(\n    prop: TwistyPropDebugger,\n    accumulator: Set<TwistyPropDebugger> = new Set(),\n  ): Set<TwistyPropDebugger> {\n    for (const child of this.childPropElems.get(prop) ?? []) {\n      if (!accumulator.has(child)) {\n        accumulator.add(child);\n        this.getDescendants(child, accumulator);\n      }\n    }\n    return accumulator;\n  }\n\n  getAncestors(\n    prop: TwistyPropDebugger,\n    accumulator: Set<TwistyPropDebugger> = new Set(),\n  ): Set<TwistyPropDebugger> {\n    for (const child of this.parentPropElems.get(prop) ?? []) {\n      if (!accumulator.has(child)) {\n        accumulator.add(child);\n        this.getAncestors(child, accumulator);\n      }\n    }\n    return accumulator;\n  }\n}\n\ncustomElementsShim.define(\"twisty-player-debugger\", TwistyPlayerDebugger);\n"],
  "mappings": "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",
  "names": ["truncateAlgForDisplay", "alg", "str", "lastSpace", "TwistyPropDebugger", "ManagedCustomElement", "name", "twistyProp", "#highlightClassManager", "ClassListManager", "span", "CSSSource", "value", "isAlgIssues", "v", "typedAlgIssues", "numMoves", "countMoves", "str1", "highlightType", "customElementsShim", "TwistyPlayerDebugger", "player", "key", "TwistyPropParent", "twistyPropDebugger", "twistyPropDebuggerParent", "childProp", "childElem", "prop", "propToClear", "children", "firstInGroup", "descendant", "parents", "ancestor", "accumulator", "child"]
}
