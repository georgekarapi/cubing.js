import{f as e}from"../../chunk-HQ2CIO37.js";import{a as s}from"../../chunk-3YNO7HT6.js";import"../../chunk-E2NCNLSG.js";import{c as r,g as i}from"../../chunk-WX2LTJPA.js";import"../../chunk-UW55Z7GB.js";import"../../chunk-6JCOA7ZK.js";import"../../chunk-JDD2UWSX.js";import"../../chunk-S4ZNJEAB.js";import"../../chunk-CM3DPZVF.js";import"../../chunk-QIOL4UIE.js";import"../../chunk-K5RKCHW3.js";import"../../chunk-SYRP7SJ5.js";var t=class{constructor(){if(!e)throw new Error("Must specify socket origin in the URL.");let o=new URL(e);o.pathname="/register-sender",this.proxySender=new s(o.toString()),document.querySelector("#connect-bluetooth").addEventListener("click",async()=>{this.puzzle=await i(),this.puzzle.addAlgLeafListener(this.proxySender.sendMoveEvent.bind(this.proxySender)),this.puzzle.addOrientationListener(this.proxySender.sendOrientationEvent.bind(this.proxySender)),console.log("Puzzle connected!",this.puzzle)}),document.querySelector("#connect-keyboard").addEventListener("click",async()=>{this.puzzle=await r(),this.puzzle.addAlgLeafListener(this.proxySender.sendMoveEvent.bind(this.proxySender)),console.log("Keyboard connected!",this.puzzle)}),document.querySelector("#reset").addEventListener("click",async()=>{this.proxySender.sendResetEvent(),"reset"in this.puzzle&&this.puzzle.reset()})}};window.addEventListener("DOMContentLoaded",()=>{let n=new t;window.app=n});
//# sourceMappingURL=index.js.map
