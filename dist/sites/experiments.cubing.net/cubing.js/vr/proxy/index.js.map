{
  "version": 3,
  "sources": ["../../../../../../src/sites/experiments.cubing.net/cubing.js/vr/proxy/index.ts"],
  "sourcesContent": ["// TODO: Generalize to WebRTC setup.\n\nimport { ExperimentalWebSocketProxySender } from \"../../../../../cubing/stream\";\n\n// Import index files from source.\n// This allows Parcel to be faster while only using values exported in the final distribution.\nimport {\n  BluetoothPuzzle,\n  connectSmartPuzzle,\n  debugKeyboardConnect,\n} from \"../../../../../cubing/bluetooth\";\nimport type { GoCube } from \"../../../../../cubing/bluetooth\";\nimport { socketOrigin } from \"../config\";\n\nclass App {\n  private proxySender: ExperimentalWebSocketProxySender;\n  // private debugProxyReceiver = new ProxyReceiver();\n  private puzzle: BluetoothPuzzle;\n  constructor() {\n    if (!socketOrigin) {\n      throw new Error(\"Must specify socket origin in the URL.\");\n    }\n    const url = new URL(socketOrigin);\n    url.pathname = \"/register-sender\";\n    this.proxySender = new ExperimentalWebSocketProxySender(url.toString());\n    document\n      .querySelector(\"#connect-bluetooth\")!\n      .addEventListener(\"click\", async () => {\n        this.puzzle = await connectSmartPuzzle();\n        this.puzzle.addAlgLeafListener(\n          this.proxySender.sendMoveEvent.bind(this.proxySender),\n        );\n        this.puzzle.addOrientationListener(\n          this.proxySender.sendOrientationEvent.bind(this.proxySender),\n        );\n        console.log(\"Puzzle connected!\", this.puzzle);\n      });\n\n    document\n      .querySelector(\"#connect-keyboard\")!\n      .addEventListener(\"click\", async () => {\n        this.puzzle = await debugKeyboardConnect();\n        this.puzzle.addAlgLeafListener(\n          this.proxySender.sendMoveEvent.bind(this.proxySender),\n        );\n        console.log(\"Keyboard connected!\", this.puzzle);\n      });\n\n    document.querySelector(\"#reset\")!.addEventListener(\"click\", async () => {\n      this.proxySender.sendResetEvent();\n      if (\"reset\" in this.puzzle) {\n        (this.puzzle as GoCube).reset();\n      }\n    });\n  }\n}\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  const app = new App();\n  (window as any).app = app;\n});\n"],
  "mappings": "2aAcA,IAAMA,EAAN,KAAU,CAIR,aAAc,CACZ,GAAI,CAACC,EACH,MAAM,IAAI,MAAM,wCAAwC,EAE1D,IAAMC,EAAM,IAAI,IAAID,CAAY,EAChCC,EAAI,SAAW,mBACf,KAAK,YAAc,IAAIC,EAAiCD,EAAI,SAAS,CAAC,EACtE,SACG,cAAc,oBAAoB,EAClC,iBAAiB,QAAS,SAAY,CACrC,KAAK,OAAS,MAAME,EAAmB,EACvC,KAAK,OAAO,mBACV,KAAK,YAAY,cAAc,KAAK,KAAK,WAAW,CACtD,EACA,KAAK,OAAO,uBACV,KAAK,YAAY,qBAAqB,KAAK,KAAK,WAAW,CAC7D,EACA,QAAQ,IAAI,oBAAqB,KAAK,MAAM,CAC9C,CAAC,EAEH,SACG,cAAc,mBAAmB,EACjC,iBAAiB,QAAS,SAAY,CACrC,KAAK,OAAS,MAAMC,EAAqB,EACzC,KAAK,OAAO,mBACV,KAAK,YAAY,cAAc,KAAK,KAAK,WAAW,CACtD,EACA,QAAQ,IAAI,sBAAuB,KAAK,MAAM,CAChD,CAAC,EAEH,SAAS,cAAc,QAAQ,EAAG,iBAAiB,QAAS,SAAY,CACtE,KAAK,YAAY,eAAe,EAC5B,UAAW,KAAK,QACjB,KAAK,OAAkB,MAAM,CAElC,CAAC,CACH,CACF,EAEA,OAAO,iBAAiB,mBAAoB,IAAM,CAChD,IAAMC,EAAM,IAAIN,EACf,OAAe,IAAMM,CACxB,CAAC",
  "names": ["App", "socketOrigin", "url", "WebSocketProxySender", "connectSmartPuzzle", "debugKeyboardConnect", "app"]
}
