{
  "version": 3,
  "sources": ["../../../../../src/sites/experiments.cubing.net/cubing.js/scramble/index.ts"],
  "sourcesContent": ["import { eventInfo } from \"../../../../cubing/puzzles\";\nimport { randomScrambleForEvent } from \"../../../../cubing/scramble\";\nimport \"../../../../cubing/twisty\";\nimport type { TwistyPlayer } from \"../../../../cubing/twisty\";\n\nconst select = document.querySelector(\"select\") as HTMLSelectElement;\nconst scrambleStringDiv = document.querySelector(\n  \"#scramble-string\",\n) as HTMLDivElement;\nconst twistyPlayer = document.querySelector(\"twisty-player\") as TwistyPlayer;\nconst button = document.querySelector(\"button\") as HTMLButtonElement;\n\nasync function newScramble() {\n  scrambleStringDiv.textContent = \"\u23F3\";\n  twistyPlayer.alg = \"\";\n  const scramble = await randomScrambleForEvent(select.value);\n  scrambleStringDiv.textContent = scramble.toString();\n  twistyPlayer.alg = scramble;\n}\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  button.addEventListener(\"click\", newScramble);\n  select.addEventListener(\"change\", () => {\n    twistyPlayer.alg = \"\";\n    try {\n      twistyPlayer.puzzle = eventInfo(select.value)!.puzzleID;\n    } finally {\n      // TODO\n    }\n    twistyPlayer.visualization = [\"clock\", \"sq1\"].includes(select.value)\n      ? \"2D\"\n      : \"3D\";\n    setTimeout(newScramble, 100);\n  });\n\n  newScramble();\n});\n"],
  "mappings": "qgBAKA,IAAMA,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAoB,SAAS,cACjC,kBACF,EACMC,EAAe,SAAS,cAAc,eAAe,EACrDC,EAAS,SAAS,cAAc,QAAQ,EAE9C,eAAeC,GAAc,CAC3BH,EAAkB,YAAc,SAChCC,EAAa,IAAM,GACnB,IAAMG,EAAW,MAAMC,EAAuBN,EAAO,KAAK,EAC1DC,EAAkB,YAAcI,EAAS,SAAS,EAClDH,EAAa,IAAMG,CACrB,CAEA,OAAO,iBAAiB,mBAAoB,IAAM,CAChDF,EAAO,iBAAiB,QAASC,CAAW,EAC5CJ,EAAO,iBAAiB,SAAU,IAAM,CACtCE,EAAa,IAAM,GACnB,GAAI,CACFA,EAAa,OAASK,EAAUP,EAAO,KAAK,EAAG,QACjD,QAAE,CAEF,CACAE,EAAa,cAAgB,CAAC,QAAS,KAAK,EAAE,SAASF,EAAO,KAAK,EAC/D,KACA,KACJ,WAAWI,EAAa,GAAG,CAC7B,CAAC,EAEDA,EAAY,CACd,CAAC",
  "names": ["select", "scrambleStringDiv", "twistyPlayer", "button", "newScramble", "scramble", "randomScrambleForEvent", "eventInfo"]
}
