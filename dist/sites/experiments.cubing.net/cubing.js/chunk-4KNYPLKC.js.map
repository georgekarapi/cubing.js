{
  "version": 3,
  "sources": ["../../../../src/sites/experiments.cubing.net/cubing.js/play/url-params.ts"],
  "sourcesContent": ["import { Alg } from \"../../../../cubing/alg\";\nimport type { QuantumDirectionalCancellation } from \"../../../../cubing/alg/cubing-private\";\n\n// Trick from https://github.com/microsoft/TypeScript/issues/28046#issuecomment-480516434\nexport type StringListAsType<T extends ReadonlyArray<unknown>> =\n  T extends ReadonlyArray<infer StringListAsType> ? StringListAsType : never;\n\nfunction getURLParamChecked<T>(\n  name: string,\n  defaultValue: T,\n  validValues: T[],\n): T {\n  const value = new URL(document.location.href).searchParams.get(name);\n  return validValues.includes(value as unknown as T)\n    ? (value as unknown as T)\n    : defaultValue;\n}\n\nconst puzzleIDs = {\n  \"2x2x2\": true,\n  \"3x3x3\": true,\n  \"4x4x4\": true,\n  \"5x5x5\": true,\n  fto: true,\n  megaminx: true,\n};\nexport const DEFAULT_PUZZLE_ID = \"3x3x3\";\nexport type PuzzleID = keyof typeof puzzleIDs;\n\nexport function getPuzzleID(): PuzzleID {\n  return getURLParamChecked<PuzzleID>(\n    \"puzzle\",\n    DEFAULT_PUZZLE_ID,\n    Object.keys(puzzleIDs) as PuzzleID[],\n  );\n}\n\nexport function getSetup(): Alg {\n  const setup = new URL(document.location.href).searchParams.get(\"setup\");\n  if (!setup) {\n    return new Alg();\n  }\n  try {\n    return Alg.fromString(setup);\n  } catch (e) {\n    return new Alg();\n  }\n}\n\nexport function debugShowRenderStats(): boolean {\n  return (\n    getURLParamChecked<\"true\" | \"false\">(\"debugShowRenderStats\", \"false\", [\n      \"true\",\n      \"false\",\n    ]) === \"true\"\n  );\n}\n\nexport function getCancel(): string {\n  return getURLParamChecked<QuantumDirectionalCancellation>(\n    \"cancel\",\n    \"any-direction\",\n    [\"same-direction\", \"any-direction\", \"none\"],\n  );\n}\n\nexport function sendingSocketOrigin(): string | null {\n  return new URL(document.location.href).searchParams.get(\n    \"sendingSocketOrigin\",\n  );\n}\n\nexport function receivingSocketOrigin(): string | null {\n  return new URL(document.location.href).searchParams.get(\n    \"receivingSocketOrigin\",\n  );\n}\n"],
  "mappings": "wCAOA,SAASA,EACPC,EACAC,EACAC,EACG,CACH,IAAMC,EAAQ,IAAI,IAAI,SAAS,SAAS,IAAI,EAAE,aAAa,IAAIH,CAAI,EACnE,OAAOE,EAAY,SAASC,CAAqB,EAC5CA,EACDF,CACN,CAEA,IAAMG,EAAY,CAChB,QAAS,GACT,QAAS,GACT,QAAS,GACT,QAAS,GACT,IAAK,GACL,SAAU,EACZ,EACaC,EAAoB,QAG1B,SAASC,GAAwB,CACtC,OAAOP,EACL,SACAM,EACA,OAAO,KAAKD,CAAS,CACvB,CACF,CAEO,SAASG,GAAgB,CAC9B,IAAMC,EAAQ,IAAI,IAAI,SAAS,SAAS,IAAI,EAAE,aAAa,IAAI,OAAO,EACtE,GAAI,CAACA,EACH,OAAO,IAAIC,EAEb,GAAI,CACF,OAAOA,EAAI,WAAWD,CAAK,CAC7B,MAAE,CACA,OAAO,IAAIC,CACb,CACF,CAEO,SAASC,GAAgC,CAC9C,OACEX,EAAqC,uBAAwB,QAAS,CACpE,OACA,OACF,CAAC,IAAM,MAEX,CAEO,SAASY,GAAoB,CAClC,OAAOZ,EACL,SACA,gBACA,CAAC,iBAAkB,gBAAiB,MAAM,CAC5C,CACF,CAEO,SAASa,GAAqC,CACnD,OAAO,IAAI,IAAI,SAAS,SAAS,IAAI,EAAE,aAAa,IAClD,qBACF,CACF,CAEO,SAASC,GAAuC,CACrD,OAAO,IAAI,IAAI,SAAS,SAAS,IAAI,EAAE,aAAa,IAClD,uBACF,CACF",
  "names": ["getURLParamChecked", "name", "defaultValue", "validValues", "value", "puzzleIDs", "DEFAULT_PUZZLE_ID", "getPuzzleID", "getSetup", "setup", "Alg", "debugShowRenderStats", "getCancel", "sendingSocketOrigin", "receivingSocketOrigin"]
}
