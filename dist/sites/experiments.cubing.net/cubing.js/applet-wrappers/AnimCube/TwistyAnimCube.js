import{m as p}from"../../chunk-MQN5DVPY.js";import"../../chunk-LWA7II2Q.js";import"../../chunk-5XPORB2B.js";import{i as d,k as m}from"../../chunk-WKWCM3NN.js";import"../../chunk-F3UND4MX.js";import"../../chunk-S4ZNJEAB.js";import"../../chunk-CM3DPZVF.js";import"../../chunk-QIOL4UIE.js";import{q as o}from"../../chunk-K5RKCHW3.js";import"../../chunk-SYRP7SJ5.js";var f=!1,g=new Set;function l(s){g.has(s)||(console.warn(s),g.add(s))}var y={config:!0,bgcolor:!0,butbgcolor:!0,colorscheme:!0,colors:!0,position:!0,speed:!0,doublespeed:!0,perspective:!0,scale:!0,align:!0,hint:!0,buttonbar:!0,edit:!0,movetext:!0,fonttype:!0,metric:!0,move:!0,initmove:!0,initrevmove:!0,demo:!0,facelets:!0,pos:!0},c=class extends m{constructor(t){super();this.finishConnectedCallback=t}connectedCallback(){setTimeout(()=>{let t={alg:new o},r=(e,n)=>{delete y[e];let a=this.children[e];if(f&&console.info(e,a),a){let u=a.getAttribute("value");u&&n(u)}};r("move",e=>{t.alg=new o(e??"")}),r("initmove",e=>{e==="#"?t.experimentalSetupAlg=new o(t.alg).invert():t.experimentalSetupAlg=o.fromString(e??"")}),r("initrevmove",e=>{e==="#"?t.experimentalSetupAlg=new o(t.alg).invert():t.experimentalSetupAlg=o.fromString(e??"").invert()}),r("buttonbar",e=>{switch(e){case"0":{t.controlPanel="none";return}case"1":{l("buttonbar=1 is not implemented (yet)");return}case"2":return;default:l(`invalid buttonbar value: ${e}`);return}}),r("hint",e=>{switch(e){case"0":{t.hintFacelets="none";return}default:t.hintFacelets="floating";return}}),f&&console.info(t),this.twistyPlayer=new p(t),r("speed",e=>{let n=parseFloat(e);n===0&&(n=10),n<0&&l("speed must be a non-negative number"),this.twistyPlayer.tempoScale=10/n});for(let e in y)if(this.children[e]){l(`Param is not implemented (yet): ${e}`);return}this.addElement(this.twistyPlayer),this.finishConnectedCallback&&this.finishConnectedCallback(this)})}};d.define("twisty-anim-cube",c);window.addEventListener("DOMContentLoaded",()=>{let s=document.querySelectorAll("applet");for(let i of Array.from(s)){let t=(e,n)=>(i.getAttribute(e)??"").toLowerCase().indexOf(n)!==-1,r;if(t("code","animcube"))r=new c(e=>{let n=i.getAttribute("width");n&&(e.twistyPlayer.style.width=`${parseInt(n).toString()}px`);let a=i.getAttribute("height");a&&(e.twistyPlayer.style.height=`${parseInt(a).toString()}px`)});else return;r.append(...Array.from(i.childNodes)),i.insertAdjacentElement("afterend",r),i.remove()}});export{c as TwistyAnimCube};
//# sourceMappingURL=TwistyAnimCube.js.map
