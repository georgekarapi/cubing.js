import{a as s,b as o,e as l,f as c,g as d}from"../chunk-UV4IB65K.js";import{a as u,b as m,d as S,e as p}from"../chunk-JDD2UWSX.js";import{b as x}from"../chunk-MQN5DVPY.js";import"../chunk-LWA7II2Q.js";import"../chunk-5XPORB2B.js";import"../chunk-WKWCM3NN.js";import"../chunk-F3UND4MX.js";import{d as g}from"../chunk-S4ZNJEAB.js";import{a,v as t}from"../chunk-CM3DPZVF.js";import"../chunk-QIOL4UIE.js";import{q as n}from"../chunk-K5RKCHW3.js";import"../chunk-SYRP7SJ5.js";function y(r){return Array.prototype.map.call(new Uint8Array(r),e=>`00${e.toString(16)}`.slice(-2)).join(" ")}function T(r){return new Uint8Array(r.split(" ").map(e=>parseInt(e,16)))}var i=class{constructor(){this.state=t.startState();this.svg=(async()=>new x(t,await g.svg()))();this.algTextarea=document.querySelector("#alg");this.kstateTextarea=document.querySelector("#kstate");this.reidStringTextarea=document.querySelector("#reid-string");this.orderElem=document.querySelector("#order");this.isSolvedWithCenterOriElem=document.querySelector("#is-solved-with-center-ori");this.isSolvedIgnoringCenterOriElem=document.querySelector("#is-solved-ignoring-center-ori");this.stickersTextarea=document.querySelector("#stickers");this.componentsTextarea=document.querySelector("#components");this.binaryTextarea=document.querySelector("#binary");let e=document.querySelector("#viewer").appendChild(document.createElement("div"));(async()=>e.appendChild((await this.svg).wrapperElement))(),document.querySelector("#reset").addEventListener("click",()=>{this.reset()}),document.querySelector("#apply-alg").addEventListener("click",()=>{this.applyAlg(this.algTextarea.value)}),document.querySelector("#set-reid-string")?.addEventListener("click",()=>{this.setReidString(this.reidStringTextarea.value)}),document.querySelector("#set-stickers").addEventListener("click",()=>{this.setStickers(this.stickersTextarea.value)}),document.querySelector("#set-components").addEventListener("click",()=>{this.setComponents(this.componentsTextarea.value)}),document.querySelector("#set-kpuzzle").addEventListener("click",()=>{this.setKStateData(JSON.parse(this.kstateTextarea.value))}),document.querySelector("#set-binary").addEventListener("click",()=>{this.setBinary(this.binaryTextarea.value)}),this.reset()}reset(){this.setState(t.startState())}applyAlg(e){this.state=this.state.applyAlg(n.fromString(e)),this.setState(this.state)}setKStateData(e){this.setState(new a(t,e))}setReidString(e){this.setState(d(e))}setStickers(e){this.setState(c(JSON.parse(e)))}setComponents(e){this.setState(S(JSON.parse(e)))}setBinary(e){this.setState(p(T(e)))}setState(e){this.state=e,(async()=>(await this.svg).draw(e))(),this.kstateTextarea.value=s(e),this.reidStringTextarea.value=o(e),this.stickersTextarea.value=JSON.stringify(l(e)),this.componentsTextarea.value=JSON.stringify(u(e),null,"  "),this.binaryTextarea.value=y(m(e)),this.orderElem.textContent=e.experimentalToTransformation().repetitionOrder().toString(),this.isSolvedIgnoringCenterOriElem.textContent=e.experimentalIsSolved({ignoreCenterOrientation:!0,ignorePuzzleOrientation:!0}).toString(),this.isSolvedWithCenterOriElem.textContent=e.experimentalIsSolved({ignoreCenterOrientation:!1,ignorePuzzleOrientation:!0}).toString()}},v=new i;window.app=v;export{y as bufferToSpacedHex,T as spacedHexToBuffer};
//# sourceMappingURL=index.js.map
