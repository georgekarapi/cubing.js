{
  "version": 3,
  "sources": ["../../../../src/cubing/stream/index.ts", "../../../../src/cubing/stream/websocket-proxy.ts"],
  "sourcesContent": ["/**\n * Please note that `cubing/stream` is based on old code and will likely receive a complete overhaul in the future.\n *\n * @packageDocumentation\n */\n\nexport type {\n  ProxyEvent as ExperimentalProxyEvent,\n  ProxyMoveEvent as ExperimentalProxyMoveEvent,\n  ProxyOrientationEvent as ExperimentalProxyOrientationEvent,\n  ProxyResetEvent as ExperimentalProxyResetEvent,\n} from \"./proxy-event\";\nexport {\n  WebSocketProxyReceiver as ExperimentalWebSocketProxyReceiver,\n  WebSocketProxySender as ExperimentalWebSocketProxySender,\n} from \"./websocket-proxy\";\n\nexport { TwizzleStreamServer as ExperimentalTwizzleStreamServer } from \"./twizzle/TwizzleStream\";\n", "import type { MoveEvent, OrientationEvent } from \"../bluetooth\";\nimport type { ProxyEvent } from \"./proxy-event\";\n\nexport class WebSocketProxySender {\n  protected websocket: WebSocket;\n  constructor(url: string) {\n    this.websocket = new WebSocket(url);\n    this.websocket.onopen = this.onopen.bind(this);\n    this.websocket.onerror = this.onerror.bind(this);\n    this.websocket.onmessage = this.onmessage.bind(this);\n  }\n\n  public sendMoveEvent(e: MoveEvent): void {\n    this.sendProxyEvent({\n      event: \"move\",\n      data: e,\n    });\n  }\n\n  public sendOrientationEvent(e: OrientationEvent): void {\n    this.sendProxyEvent({\n      event: \"orientation\",\n      data: e,\n    });\n  }\n\n  public sendResetEvent(): void {\n    this.sendProxyEvent({ event: \"reset\" });\n  }\n\n  protected sendProxyEvent(proxyEvent: ProxyEvent): void {\n    this.websocket.send(JSON.stringify(proxyEvent));\n  }\n\n  protected onopen(): void {\n    console.log(\"Sending socket is open!\");\n  }\n\n  protected onerror(error: Error): void {\n    console.error(\"WebSocket sender error:\", error);\n  }\n\n  protected onmessage(_e: MessageEvent): void {}\n}\n\nexport abstract class WebSocketProxyReceiver {\n  protected websocket: WebSocket;\n  constructor(url: string, socketOrigin?: string) {\n    if (!socketOrigin) {\n      console.log(\"No socket origin specified. Will not attempt to connect.\");\n      return;\n    }\n    this.websocket = new WebSocket(url);\n    console.log(this.websocket);\n    this.websocket.onopen = this.onopen.bind(this);\n    this.websocket.onerror = this.onerror.bind(this);\n    this.websocket.onmessage = this.onmessage.bind(this);\n  }\n\n  protected onopen(): void {\n    console.log(\"Receiving socket is open!\");\n  }\n\n  protected onerror(error: Error): void {\n    console.error(\"WebSocket receiver error:\", error);\n  }\n\n  protected onmessage(e: MessageEvent): void {\n    this.onProxyEvent(JSON.parse(e.data));\n  }\n\n  abstract onProxyEvent(e: ProxyEvent): void;\n}\n"],
  "mappings": "gFAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,qCAAAE,EAAA,uCAAAC,EAAA,qCAAAC,ICGO,IAAMC,EAAN,KAA2B,CAEhC,YAAYC,EAAa,CACvB,KAAK,UAAY,IAAI,UAAUA,CAAG,EAClC,KAAK,UAAU,OAAS,KAAK,OAAO,KAAK,IAAI,EAC7C,KAAK,UAAU,QAAU,KAAK,QAAQ,KAAK,IAAI,EAC/C,KAAK,UAAU,UAAY,KAAK,UAAU,KAAK,IAAI,CACrD,CAEO,cAAc,EAAoB,CACvC,KAAK,eAAe,CAClB,MAAO,OACP,KAAM,CACR,CAAC,CACH,CAEO,qBAAqB,EAA2B,CACrD,KAAK,eAAe,CAClB,MAAO,cACP,KAAM,CACR,CAAC,CACH,CAEO,gBAAuB,CAC5B,KAAK,eAAe,CAAE,MAAO,OAAQ,CAAC,CACxC,CAEU,eAAeC,EAA8B,CACrD,KAAK,UAAU,KAAK,KAAK,UAAUA,CAAU,CAAC,CAChD,CAEU,QAAe,CACvB,QAAQ,IAAI,yBAAyB,CACvC,CAEU,QAAQC,EAAoB,CACpC,QAAQ,MAAM,0BAA2BA,CAAK,CAChD,CAEU,UAAUC,EAAwB,CAAC,CAC/C,EAEsBC,EAAf,KAAsC,CAE3C,YAAYJ,EAAaK,EAAuB,CAC9C,GAAI,CAACA,EAAc,CACjB,QAAQ,IAAI,0DAA0D,EACtE,MACF,CACA,KAAK,UAAY,IAAI,UAAUL,CAAG,EAClC,QAAQ,IAAI,KAAK,SAAS,EAC1B,KAAK,UAAU,OAAS,KAAK,OAAO,KAAK,IAAI,EAC7C,KAAK,UAAU,QAAU,KAAK,QAAQ,KAAK,IAAI,EAC/C,KAAK,UAAU,UAAY,KAAK,UAAU,KAAK,IAAI,CACrD,CAEU,QAAe,CACvB,QAAQ,IAAI,2BAA2B,CACzC,CAEU,QAAQE,EAAoB,CACpC,QAAQ,MAAM,4BAA6BA,CAAK,CAClD,CAEU,UAAU,EAAuB,CACzC,KAAK,aAAa,KAAK,MAAM,EAAE,IAAI,CAAC,CACtC,CAGF",
  "names": ["stream_exports", "__export", "TwizzleStreamServer", "WebSocketProxyReceiver", "WebSocketProxySender", "WebSocketProxySender", "url", "proxyEvent", "error", "_e", "WebSocketProxyReceiver", "socketOrigin"]
}
