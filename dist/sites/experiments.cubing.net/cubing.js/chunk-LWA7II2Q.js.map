{
  "version": 3,
  "sources": ["../../../../src/cubing/twisty/debug.ts", "../../../../src/cubing/twisty/model/props/puzzle/display/HintFaceletProp.ts", "../../../../src/cubing/twisty/views/canvas.ts", "../../../../src/cubing/twisty/controllers/RenderScheduler.ts", "../../../../src/cubing/twisty/views/3D/TAU.ts", "../../../../src/cubing/vendor/mit/three/examples/jsm/libs/stats.modified.module.ts", "../../../../src/cubing/twisty/heavy-code-imports/3d.ts", "../../../../src/cubing/twisty/views/3D/Twisty3DVantage.css.ts", "../../../../src/cubing/twisty/views/3D/DragTracker.ts", "../../../../src/cubing/twisty/views/3D/RendererPool.ts", "../../../../src/cubing/twisty/views/3D/TwistyOrbitControls.ts", "../../../../src/cubing/twisty/views/3D/Twisty3DVantage.ts"],
  "sourcesContent": ["export const twistyDebugGlobals: {\n  // WARNING: The current shared renderer implementation has performance issues, especially in Safari.\n  // Avoid using for players that are likely to have dimensions approaching 1 megapixel or higher.\n  // TODO: use a dedicated renderer while fullscreen?\n  // - \"auto\": Default heuristics.\n  // - \"always\": Force all new (i.e. constructed in the future) renderers to be shared\n  // - \"never\": Force all new (i.e. constructed in the future) renderers to be dedicated\n  shareAllNewRenderers: \"auto\" | \"always\" | \"never\";\n  showRenderStats: boolean;\n} = {\n  shareAllNewRenderers: \"auto\",\n  showRenderStats: false,\n};\n\nexport function setTwistyDebug(\n  options: Partial<typeof twistyDebugGlobals>,\n): void {\n  for (const [key, value] of Object.entries(options)) {\n    if (key in twistyDebugGlobals) {\n      (twistyDebugGlobals as any)[key] = value;\n    }\n  }\n}\n", "import { SimpleTwistyPropSource } from \"../../TwistyProp\";\n\n// TODO: turn these maps into lists?\nexport const hintFaceletStyles = {\n  floating: true, // default\n  none: true,\n};\nexport type HintFaceletStyle = keyof typeof hintFaceletStyles;\nexport type HintFaceletStyleWithAuto = HintFaceletStyle | \"auto\";\n\nexport class HintFaceletProp extends SimpleTwistyPropSource<HintFaceletStyleWithAuto> {\n  getDefaultValue(): HintFaceletStyleWithAuto {\n    return \"auto\";\n  }\n}\n", "let globalPixelRatioOverride: number | null = null;\nexport function setGlobalPixelRatioOverride(override: number | null): void {\n  globalPixelRatioOverride = override;\n}\n\n// TODO: Handle if you move across screens?\nexport function pixelRatio(): number {\n  return globalPixelRatioOverride ?? (devicePixelRatio || 1);\n}\n", "// Debounces `requestAnimationFrame()`.\nexport class RenderScheduler {\n  private animFrameID: number | null = null;\n  private animFrame = this.animFrameWrapper.bind(this);\n  constructor(private callback: (timestamp: DOMHighResTimeStamp) => void) {}\n\n  requestIsPending(): boolean {\n    return !!this.animFrameID;\n  }\n\n  requestAnimFrame(): void {\n    if (!this.animFrameID) {\n      this.animFrameID = requestAnimationFrame(this.animFrame);\n    }\n  }\n\n  cancelAnimFrame(): void {\n    if (this.animFrameID) {\n      cancelAnimationFrame(this.animFrameID);\n      this.animFrameID = 0;\n    }\n  }\n\n  private animFrameWrapper(timestamp: DOMHighResTimeStamp): void {\n    this.animFrameID = 0;\n    this.callback(timestamp);\n  }\n}\n\n// An interface for classes to use to expose their scheduling.\nexport interface Schedulable {\n  scheduleRender(): void;\n}\n", "export const TAU = Math.PI * 2;\nexport const DEGREES_PER_RADIAN = 360 / TAU;\n", "/**\n * @author mrdoob / http://mrdoob.com/\n * ESM conversion by Lucas Garron, 2021-12-21\n */\n\nconst performance:\n  | null\n  | (Performance & {\n      memory?: {\n        usedJSHeapSize: number;\n        jsHeapSizeLimit: number;\n      };\n    }) = globalThis.performance;\n\nexport class Stats {\n  mode = 0;\n\n  dom = document.createElement(\"div\");\n\n  constructor() {\n    this.dom.style.cssText =\n      \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n    this.dom.addEventListener(\n      \"click\",\n      (event) => {\n        event.preventDefault();\n        this.showPanel(++this.mode % this.dom.children.length);\n      },\n      false,\n    );\n\n    this.showPanel(0);\n  }\n\n  addPanel(panel: StatsPanel): StatsPanel {\n    this.dom.appendChild(panel.dom);\n    return panel;\n  }\n\n  showPanel(id: number): void {\n    for (let i = 0; i < this.dom.children.length; i++) {\n      (this.dom.children[i] as HTMLElement).style.display =\n        i === id ? \"block\" : \"none\";\n    }\n\n    this.mode = id;\n  }\n\n  beginTime = (performance || Date).now();\n  prevTime = this.beginTime;\n  frames = 0;\n\n  fpsPanel = this.addPanel(new StatsPanel(\"FPS\", \"#0ff\", \"#002\"));\n  msPanel = this.addPanel(new StatsPanel(\"MS\", \"#0f0\", \"#020\"));\n  memPanel = performance?.memory\n    ? this.addPanel(new StatsPanel(\"MB\", \"#f08\", \"#201\"))\n    : null;\n  REVISION = 16;\n\n  begin() {\n    this.beginTime = (performance || Date).now();\n  }\n\n  end() {\n    this.frames++;\n\n    const time = (performance || Date).now();\n\n    this.msPanel.update(time - this.beginTime, 200);\n\n    if (time >= this.prevTime + 1000) {\n      this.fpsPanel.update((this.frames * 1000) / (time - this.prevTime), 100);\n\n      this.prevTime = time;\n      this.frames = 0;\n\n      if (this.memPanel) {\n        const memory = performance!.memory!;\n        this.memPanel.update(\n          memory.usedJSHeapSize / 1048576,\n          memory.jsHeapSizeLimit / 1048576,\n        );\n      }\n    }\n\n    return time;\n  }\n\n  update() {\n    this.beginTime = this.end();\n  }\n}\n\nconst PR = Math.round(globalThis?.window?.devicePixelRatio ?? 1);\n\nconst WIDTH = 80 * PR;\nconst HEIGHT = 48 * PR;\nconst TEXT_X = 3 * PR;\nconst TEXT_Y = 2 * PR;\nconst GRAPH_X = 3 * PR;\nconst GRAPH_Y = 15 * PR;\nconst GRAPH_WIDTH = 74 * PR;\nconst GRAPH_HEIGHT = 30 * PR;\n\nexport class StatsPanel {\n  min = Infinity;\n  max = 0;\n  dom = document.createElement(\"canvas\");\n  context = this.dom.getContext(\"2d\")!;\n  constructor(private name: string, private fg: string, private bg: string) {\n    this.dom.width = WIDTH;\n    this.dom.height = HEIGHT;\n    this.dom.style.cssText = \"width:80px;height:48px\";\n\n    this.context.font = `bold ${9 * PR}px Helvetica,Arial,sans-serif`;\n    this.context.textBaseline = \"top\";\n\n    this.context.fillStyle = bg;\n    this.context.fillRect(0, 0, WIDTH, HEIGHT);\n\n    this.context.fillStyle = fg;\n    this.context.fillText(name, TEXT_X, TEXT_Y);\n    this.context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\n\n    this.context.fillStyle = bg;\n    this.context.globalAlpha = 0.9;\n    this.context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\n  }\n\n  update(value: number, maxValue: number) {\n    this.min = Math.min(this.min, value);\n    this.max = Math.max(this.max, value);\n\n    this.context.fillStyle = this.bg;\n    this.context.globalAlpha = 1;\n    this.context.fillRect(0, 0, WIDTH, GRAPH_Y);\n    this.context.fillStyle = this.fg;\n    this.context.fillText(\n      `${Math.round(value)} ${this.name} (${Math.round(this.min)}-${Math.round(\n        this.max,\n      )})`,\n      TEXT_X,\n      TEXT_Y,\n    );\n\n    this.context.drawImage(\n      this.dom,\n      GRAPH_X + PR,\n      GRAPH_Y,\n      GRAPH_WIDTH - PR,\n      GRAPH_HEIGHT,\n      GRAPH_X,\n      GRAPH_Y,\n      GRAPH_WIDTH - PR,\n      GRAPH_HEIGHT,\n    );\n\n    this.context.fillRect(\n      GRAPH_X + GRAPH_WIDTH - PR,\n      GRAPH_Y,\n      PR,\n      GRAPH_HEIGHT,\n    );\n\n    this.context.fillStyle = this.bg;\n    this.context.globalAlpha = 0.9;\n    this.context.fillRect(\n      GRAPH_X + GRAPH_WIDTH - PR,\n      GRAPH_Y,\n      PR,\n      Math.round((1 - value / maxValue) * GRAPH_HEIGHT),\n    );\n  }\n}\n", "import { from } from \"../../vendor/mit/p-lazy/p-lazy\";\n\n// TODO can we remove the cached proxy?\n\n// In theory we can, but we've run into situations where imports are not properly cached.\nlet cachedConstructorProxy: Promise<\n  typeof import(\"./dynamic-entries/twisty-dynamic-3d\")\n> | null = null;\n\nexport async function proxy3D(): Promise<\n  typeof import(\"./dynamic-entries/twisty-dynamic-3d\")\n> {\n  return (cachedConstructorProxy ??= import(\n    \"./dynamic-entries/twisty-dynamic-3d\"\n  ));\n}\n\nexport const THREEJS: Promise<typeof import(\"three\")> = from(\n  async () => (await proxy3D()).T3I,\n);\n", "import { CSSSource } from \"../ManagedCustomElement\";\n\n// The `position` values are a hack for a bug in Safari where the canvas either\n// grows infinitely, or takes up the full `fr` of any encompassing grid (making\n// the contents of that element e.g. over 100% of its height). `contain:\n// content` is a good fix for this, but there is no indication that Safari will\n// support it soon. https://developer.mozilla.org/en-US/docs/Web/CSS/contain\n\nexport const twisty3DVantageCSS = new CSSSource(\n  `\n:host {\n  width: 384px;\n  height: 256px;\n  display: grid;\n}\n\n.wrapper {\n  width: 100%;\n  height: 100%;\n  display: grid;\n  overflow: hidden;\n  place-content: center;\n  contain: strict;\n}\n\n.loading {\n  width: 4em;\n  height: 4em;\n  border-radius: 2.5em;\n  border: 0.5em solid rgba(0, 0, 0, 0);\n  border-top: 0.5em solid rgba(0, 0, 0, 0.7);\n  border-right: 0.5em solid rgba(0, 0, 0, 0.7);\n  animation: fade-in-delayed 4s, rotate 1s linear infinite;\n}\n\n@keyframes fade-in-delayed {\n  0% { opacity: 0; }\n  25% {opacity: 0; }\n  100% { opacity: 1; }\n}\n\n@keyframes rotate {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n/* TODO: This is due to stats hack. Replace with \\`canvas\\`. */\n.wrapper > canvas {\n  max-width: 100%;\n  max-height: 100%;\n  animation: fade-in 0.25s ease-in;\n}\n\n@keyframes fade-in {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n.wrapper.invisible {\n  opacity: 0;\n}\n\n.wrapper.drag-input-enabled > canvas {\n  cursor: grab;\n}\n\n.wrapper.drag-input-enabled > canvas:active {\n  cursor: grabbing;\n}\n`,\n);\n", "// export class Drag() {\n\n// }\n\ninterface DragInfo {\n  attachedInfo: Record<any, any>;\n  hasMoved: boolean;\n  lastClientX: number;\n  lastClientY: number;\n  lastTimeStamp: number;\n}\n\ntype PointerID = number;\n\nexport interface DragMovementInfo {\n  attachedInfo: Record<any, any>;\n  movementX: number;\n  movementY: number;\n  elapsedMs: number;\n}\n\nexport interface UpInfo {\n  attachedInfo: Record<any, any>;\n}\n\nexport interface PressInfo {\n  normalizedX: number;\n  normalizedY: number;\n  rightClick: boolean;\n  keys: {\n    // TODO: group these\n    altKey: boolean;\n    ctrlOrMetaKey: boolean;\n    shiftKey: boolean;\n  };\n}\n\n// Chrome can report movements as low as `0.0000152587890625` even if the cursor did not move at all. So we need a treshold insteadl.\nconst MOVEMENT_EPSILON = 0.1; // px\n\nexport class DragTracker extends EventTarget {\n  #dragInfoMap: Map<PointerID, DragInfo> = new Map();\n\n  constructor(public readonly target: HTMLElement) {\n    super();\n  }\n\n  // Idempotent\n  start() {\n    this.addTargetListener(\"pointerdown\", this.onPointerDown.bind(this));\n    // Prevent right-click on desktop (only tested on macOS Chrome/Safari/Firefox) so we can detect right-click moves.\n    // TODO: Can we do this selectively, e.g. only on the puzzle? That way we could allow right-click to download the canvas. Unfortunately, it would probably require a sync calculation.\n    this.addTargetListener(\"contextmenu\", (e) => {\n      e.preventDefault();\n    });\n    // Prevent touch scrolling (preventing default on `pointermove` doesn't work).\n    this.addTargetListener(\"touchmove\", (e) => e.preventDefault());\n    // Prevent zooming on double-tap (iOS).\n    // This is because `dblclick` works to zoom in, but does *not* work to zoom out. So the user can get stuck zoomed into the player without a way to zoom out.\n    this.addTargetListener(\"dblclick\", (e) => e.preventDefault());\n  }\n\n  // Idempotent\n  stop(): void {\n    for (const [eventType, listener] of this.#targetListeners.entries()) {\n      this.target.removeEventListener(eventType, listener);\n    }\n    this.#targetListeners.clear();\n    this.#lazyListenersRegistered = false;\n  }\n\n  #targetListeners = new Map<string, (e: MouseEvent) => any>();\n  addTargetListener(eventType: string, listener: (e: MouseEvent) => any) {\n    if (!this.#targetListeners.has(eventType)) {\n      this.target.addEventListener(eventType, listener);\n      this.#targetListeners.set(eventType, listener);\n    }\n  }\n\n  // This allows us to avoid getting a callback every time the pointer moves over the canvas, until we have a down event.\n  // TODO: Ideally we'd also support unregistering when we're certain there are no more active touches. But this means we need to properly handle every way a pointer \"click\" can end, which is tricky across environments (due to e.g. mouse vs. touch vs. stylues, canvas/viewport/window/scroll boundaries, right-click and other ways of losing focus, etc.), so we conservatively leave the listeners on.\n  #lazyListenersRegistered: boolean = false;\n  #registerLazyListeners(): void {\n    if (this.#lazyListenersRegistered) {\n      return;\n    }\n    this.addTargetListener(\"pointermove\", this.onPointerMove.bind(this)); // TODO: only register this after pointer down.\n    this.addTargetListener(\"pointerup\", this.onPointerUp.bind(this));\n    this.#lazyListenersRegistered = true;\n  }\n\n  #clear(e: PointerEvent): void {\n    this.#dragInfoMap.delete(e.pointerId);\n  }\n\n  // `null`: means: ignore this result (no movement, or not\n  #trackDrag(e: PointerEvent): {\n    movementInfo: DragMovementInfo | null;\n    hasMoved: boolean;\n  } {\n    // TODO: Find a way to detect if this is an active press, in a way that works cross-platform.\n    // if (e.buttons === 0) {\n    //   return { movementInfo: null, hasMoved: false };\n    // }\n    const existing = this.#dragInfoMap.get(e.pointerId);\n    if (!existing) {\n      return { movementInfo: null, hasMoved: false };\n    }\n    // We would try to use `e.movementX`/`e.movementY`, except Safari:\n    // - Does not have those values on i[Pad]OS.\n    // - Will always report `0` for these values on macOS.\n    // https://bugs.webkit.org/show_bug.cgi?id=220194\n    //\n    // The following are all insufficiently powerful for detecting the Safari `0` bug:\n    // - `\"movementX\" in e`\n    // - `e.movementX !== \"undefined\"`\n    // - `e.hasOwnProperty(\"movementX\")`\n\n    let movementInfo: DragMovementInfo;\n    if ((e.movementX ?? 0) !== 0 || (e.movementY ?? 0) !== 0) {\n      // We optimistically try to catch sub-pixel movements in Chrome.\n      movementInfo = {\n        attachedInfo: existing.attachedInfo,\n        movementX: e.movementX,\n        movementY: e.movementY,\n        elapsedMs: e.timeStamp - existing.lastTimeStamp,\n      };\n    } else {\n      movementInfo = {\n        attachedInfo: existing.attachedInfo,\n        movementX: e.clientX - existing.lastClientX,\n        movementY: e.clientY - existing.lastClientY,\n        elapsedMs: e.timeStamp - existing.lastTimeStamp,\n      };\n    }\n    existing.lastClientX = e.clientX;\n    existing.lastClientY = e.clientY;\n    existing.lastTimeStamp = e.timeStamp;\n    if (\n      Math.abs(movementInfo.movementX) < MOVEMENT_EPSILON &&\n      Math.abs(movementInfo.movementY) < MOVEMENT_EPSILON\n    ) {\n      return { movementInfo: null, hasMoved: existing.hasMoved };\n    } else {\n      existing.hasMoved = true;\n      return { movementInfo, hasMoved: existing.hasMoved };\n    }\n  }\n\n  private onPointerDown(e: PointerEvent) {\n    this.#registerLazyListeners();\n    const newDragInfo: DragInfo = {\n      attachedInfo: {},\n      hasMoved: false,\n      lastClientX: e.clientX,\n      lastClientY: e.clientY,\n      lastTimeStamp: e.timeStamp,\n    };\n    this.#dragInfoMap.set(e.pointerId, newDragInfo);\n    this.target.setPointerCapture(e.pointerId);\n  }\n\n  private onPointerMove(e: PointerEvent) {\n    const movementInfo = this.#trackDrag(e).movementInfo;\n    if (movementInfo) {\n      e.preventDefault();\n      this.dispatchEvent(\n        new CustomEvent(\"move\", {\n          detail: movementInfo,\n        }),\n      );\n    }\n  }\n\n  private onPointerUp(e: PointerEvent) {\n    const trackDragResult = this.#trackDrag(e);\n    const existing = this.#dragInfoMap.get(e.pointerId)!; // TODO\n    this.#clear(e);\n    this.target.releasePointerCapture(e.pointerId); // TODO: unnecessary?\n    let event: CustomEvent;\n    if (trackDragResult.hasMoved) {\n      // TODO: send proper movement/momentum since last move event.\n      event = new CustomEvent<UpInfo>(\"up\", {\n        detail: { attachedInfo: existing.attachedInfo },\n      });\n    } else {\n      const { altKey, ctrlKey, metaKey, shiftKey } = e;\n      event = new CustomEvent<PressInfo>(\"press\", {\n        detail: {\n          normalizedX: (e.offsetX / this.target.offsetWidth) * 2 - 1,\n          normalizedY: 1 - (e.offsetY / this.target.offsetHeight) * 2,\n          rightClick: !!(e.button & 2),\n          keys: {\n            altKey,\n            ctrlOrMetaKey: ctrlKey || metaKey,\n            shiftKey,\n          },\n        },\n      });\n    }\n    this.dispatchEvent(event);\n  }\n}\n", "// TODO: https://stackoverflow.com/a/40443642\n\n// let shareAllNewRenderers: boolean = false;\n\n// // WARNING: The current shared renderer implementation is not every efficient.\n// // Avoid using for players that are likely to have dimensions approaching 1 megapixel or higher.\n// // TODO: use a dedicated renderer while fullscreen?\n// export function experimentalSetShareAllNewRenderers(share: boolean): void {\n//   shareAllNewRenderers = share;\n// }\n\n// const sharedRenderer: WebGLRenderer | null = null;\n\nimport { THREEJS } from \"../../heavy-code-imports/3d\";\nimport type { Camera, Scene, WebGLRenderer } from \"three\";\nimport { pixelRatio } from \"../canvas\";\n\nconst renderers: Promise<WebGLRenderer>[] = [];\n\n// Render result is guaranteed to be available synchronously at resolution time.\nexport async function rawRenderPooled(\n  width: number,\n  height: number,\n  scene: Scene,\n  camera: Camera,\n): Promise<HTMLCanvasElement> {\n  // At most one in the pool for now.\n  if (renderers.length === 0) {\n    renderers.push(newRenderer());\n  }\n  const renderer = await renderers[0];\n  // TODO: scissoring\n  renderer.setSize(width, height); // TODO: is it faster if we cache values and only call this when necessary?\n  renderer.render(scene, camera);\n\n  return renderer.domElement;\n}\n\n// let haveSet = false;\nexport async function renderPooled(\n  width: number,\n  height: number,\n  canvas: HTMLCanvasElement,\n  scene: Scene,\n  camera: Camera,\n): Promise<void> {\n  if (width === 0 || height === 0) {\n    return;\n  }\n  // At most one in the pool for now.\n  if (renderers.length === 0) {\n    renderers.push(newRenderer());\n  }\n\n  const rendererCanvas = await rawRenderPooled(width, height, scene, camera);\n\n  // TODO: Should we cache this? Seems to take about 0.0001ms to get.\n  const context = canvas.getContext(\"2d\")!;\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  context.drawImage(rendererCanvas, 0, 0);\n}\n\nexport async function newRenderer(): Promise<WebGLRenderer> {\n  const rendererConstructor = (await THREEJS).WebGLRenderer;\n  const renderer = new rendererConstructor({\n    antialias: true,\n    alpha: true,\n  });\n  renderer.setPixelRatio(pixelRatio());\n  return renderer;\n}\n", "import type { Vector3 } from \"three\";\nimport { RenderScheduler } from \"../../controllers/RenderScheduler\";\nimport { THREEJS } from \"../../heavy-code-imports/3d\";\nimport type { OrbitCoordinates } from \"../../model/props/viewer/OrbitCoordinatesRequestProp\";\nimport type { TwistyPlayerModel } from \"../../model/TwistyPlayerModel\";\nimport type { DragMovementInfo, DragTracker } from \"./DragTracker\";\nimport { DEGREES_PER_RADIAN } from \"./TAU\";\n\nconst INERTIA_DEFAULT: boolean = true;\n\nconst INERTIA_DURATION_MS = 500;\n// If the first inertial render is this long after the last move, we assume the\n// user has halted the cursor and we consider inertia to have \"timed out\". We\n// never begin animating the inertia.\nconst INERTIA_TIMEOUT_MS = 50;\n\nconst VERTICAL_MOVEMENT_BASE_SCALE = 0.75;\n\n// progress is from 0 to 1.\nfunction momentumScale(progress: number) {\n  // This is the exponential curve flipped so that\n  // - The slope at progress = 0 is 1 (this corresponds to \"x = 1\" on the normal\n  //   curve).\n  // - The scale exponentially \"decays\" until progress = 1.\n  // This means the scale at the end will be about 0.418\n  return (Math.exp(1 - progress) - (1 - progress)) / (1 - Math.E) + 1;\n}\n\nclass Inertia {\n  private scheduler = new RenderScheduler(this.render.bind(this));\n  private lastTimestamp: number;\n  constructor(\n    private startTimestamp: number,\n    private momentumX: number,\n    private momentumY: number,\n    private callback: (movementX: number, movementY: number) => void,\n  ) {\n    this.scheduler.requestAnimFrame();\n    this.lastTimestamp = startTimestamp;\n  }\n\n  private render(now: DOMHighResTimeStamp) {\n    const progressBefore =\n      (this.lastTimestamp - this.startTimestamp) / INERTIA_DURATION_MS;\n    const progressAfter = Math.min(\n      1,\n      (now - this.startTimestamp) / INERTIA_DURATION_MS,\n    );\n\n    if (\n      progressBefore === 0 &&\n      progressAfter > INERTIA_TIMEOUT_MS / INERTIA_DURATION_MS\n    ) {\n      // The user has already paused for a while. Don't start any inertia.\n      return;\n    }\n\n    const delta = momentumScale(progressAfter) - momentumScale(progressBefore);\n\n    // TODO: For now, we only carry horizontal momentum. If this should stay, we\n    // can remove the plumbing for the Y dimension.\n    this.callback(this.momentumX * delta * 1000, this.momentumY * delta * 1000);\n\n    if (progressAfter < 1) {\n      this.scheduler.requestAnimFrame();\n    }\n    this.lastTimestamp = now;\n  }\n}\n\nexport async function positionToOrbitCoordinates(\n  position: Vector3,\n): Promise<OrbitCoordinates> {\n  const spherical = new (await THREEJS).Spherical();\n  spherical.setFromVector3(position);\n  return {\n    latitude: 90 - spherical.phi * DEGREES_PER_RADIAN,\n    longitude: spherical.theta * DEGREES_PER_RADIAN,\n    distance: spherical.radius,\n  };\n}\n\ninterface TwistyOrbitControlsDragAttachedInfo {\n  lastTemperedX: number;\n  lastTemperedY: number;\n  timestamp: number;\n}\n\n// TODO: change mouse cursor while moving.\nexport class TwistyOrbitControls {\n  /** @deprecated */\n  experimentalInertia: boolean = INERTIA_DEFAULT;\n  private onMovementBound = this.onMovement.bind(this);\n  public experimentalHasBeenMoved: boolean = false;\n  constructor(\n    private model: TwistyPlayerModel,\n    private mirror: boolean,\n    private canvas: HTMLCanvasElement,\n    private dragTracker: DragTracker,\n  ) {\n    this.dragTracker.addEventListener(\"move\", this.onMove.bind(this));\n    this.dragTracker.addEventListener(\"up\", this.onUp.bind(this));\n  }\n\n  // f is the fraction of the canvas traversed per ms.\n  temperMovement(f: number): number {\n    // This is scaled to be linear for small values, but to reduce large values\n    // by a significant factor.\n    return (Math.sign(f) * Math.log(Math.abs(f * 10) + 1)) / 6;\n  }\n\n  onMove(e: CustomEvent<DragMovementInfo>): void {\n    e.detail.attachedInfo ??= {};\n\n    const { temperedX, temperedY } = this.onMovement(\n      e.detail.movementX,\n      e.detail.movementY,\n    );\n    const attachedInfo = e.detail\n      .attachedInfo as TwistyOrbitControlsDragAttachedInfo;\n    attachedInfo.lastTemperedX = temperedX * 10;\n    attachedInfo.lastTemperedY = temperedY * 10;\n    attachedInfo.timestamp = e.timeStamp; // TODO\n  }\n\n  onMovement(\n    movementX: number,\n    movementY: number,\n  ): {\n    temperedX: number;\n    temperedY: number;\n  } {\n    const scale = this.mirror ? -1 : 1;\n\n    // TODO: refactor\n    const minDim = Math.min(this.canvas.offsetWidth, this.canvas.offsetHeight);\n\n    const temperedX = this.temperMovement(movementX / minDim);\n    const temperedY = this.temperMovement(\n      (movementY / minDim) * VERTICAL_MOVEMENT_BASE_SCALE,\n    );\n    this.model.twistySceneModel.orbitCoordinatesRequest.set(\n      (async () => {\n        const prevCoords =\n          await this.model.twistySceneModel.orbitCoordinates.get();\n\n        const newCoords = {\n          latitude:\n            prevCoords.latitude + 2 * temperedY * DEGREES_PER_RADIAN * scale,\n          longitude: prevCoords.longitude - 2 * temperedX * DEGREES_PER_RADIAN,\n        };\n        return newCoords;\n      })(),\n    );\n    return { temperedX, temperedY };\n  }\n\n  onUp(e: CustomEvent<DragMovementInfo>): void {\n    e.preventDefault();\n    if (\n      \"lastTemperedX\" in e.detail.attachedInfo &&\n      \"lastTemperedY\" in e.detail.attachedInfo &&\n      \"timestamp\" in e.detail.attachedInfo &&\n      e.timeStamp - e.detail.attachedInfo.timestamp < 60 // TODO\n    ) {\n      new Inertia(\n        e.timeStamp, // TODO\n        (e.detail.attachedInfo as TwistyOrbitControlsDragAttachedInfo)\n          .lastTemperedX,\n        (e.detail.attachedInfo as TwistyOrbitControlsDragAttachedInfo)\n          .lastTemperedY,\n        this.onMovementBound,\n      ); // TODO: cancel inertia\n    }\n  }\n}\n", "import type { PerspectiveCamera, WebGLRenderer } from \"three\";\nimport { Stats } from \"../../../vendor/mit/three/examples/jsm/libs/stats.modified.module\";\nimport { THREEJS } from \"../../heavy-code-imports/3d\";\nimport { StaleDropper } from \"../../model/PromiseFreshener\";\nimport type { TwistyPropParent } from \"../../model/props/TwistyProp\";\nimport type { OrbitCoordinates } from \"../../model/props/viewer/OrbitCoordinatesRequestProp\";\nimport type { TwistyPlayerModel } from \"../../model/TwistyPlayerModel\";\nimport { RenderScheduler } from \"../../controllers/RenderScheduler\";\nimport { ManagedCustomElement } from \"../ManagedCustomElement\";\nimport { customElementsShim } from \"../node-custom-element-shims\";\nimport { pixelRatio } from \"../canvas\";\nimport { twisty3DVantageCSS } from \"./Twisty3DVantage.css\";\nimport { DragTracker, PressInfo } from \"./DragTracker\";\nimport { newRenderer, renderPooled } from \"./RendererPool\";\nimport { DEGREES_PER_RADIAN } from \"./TAU\";\nimport type { Twisty3DSceneWrapper } from \"./Twisty3DSceneWrapper\";\nimport { TwistyOrbitControls } from \"./TwistyOrbitControls\";\nimport type { DragInputMode } from \"../../model/props/puzzle/state/DragInputProp\";\nimport { twistyDebugGlobals } from \"../../debug\";\n\nexport async function setCameraFromOrbitCoordinates(\n  camera: PerspectiveCamera,\n  orbitCoordinates: OrbitCoordinates,\n  backView: boolean = false,\n): Promise<void> {\n  const spherical = new (await THREEJS).Spherical(\n    orbitCoordinates.distance,\n    (90 - (backView ? -1 : 1) * orbitCoordinates.latitude) / DEGREES_PER_RADIAN,\n    ((backView ? 180 : 0) + orbitCoordinates.longitude) / DEGREES_PER_RADIAN,\n  );\n  spherical.makeSafe();\n  camera.position.setFromSpherical(spherical);\n  camera.lookAt(0, 0, 0);\n}\n\nlet dedicatedRenderersSoFar = 0;\nconst DEFAULT_MAX_DEDICATED_RENDERERS = 2; // This allows for a front view and a back view (or two separate front views).\nlet sharingRenderers = false;\nfunction shareRenderer(): boolean {\n  if (twistyDebugGlobals.shareAllNewRenderers !== \"auto\") {\n    if (!twistyDebugGlobals.shareAllNewRenderers) {\n      dedicatedRenderersSoFar++;\n    }\n    return twistyDebugGlobals.shareAllNewRenderers !== \"never\";\n  }\n  if (dedicatedRenderersSoFar < DEFAULT_MAX_DEDICATED_RENDERERS) {\n    dedicatedRenderersSoFar++;\n    return false;\n  } else {\n    sharingRenderers = true;\n    return true;\n  }\n}\n\nexport function haveStartedSharingRenderers(): boolean {\n  return sharingRenderers;\n}\n\nexport class Twisty3DVantage extends ManagedCustomElement {\n  scene: Twisty3DSceneWrapper | null = null;\n\n  stats: Stats | null = null;\n\n  private rendererIsShared: boolean = shareRenderer();\n\n  loadingElement: HTMLDivElement | null = null;\n  constructor(\n    private model?: TwistyPlayerModel,\n    scene?: Twisty3DSceneWrapper,\n    private options?: { backView?: boolean },\n  ) {\n    super();\n    this.scene = scene ?? null;\n\n    this.loadingElement = this.addElement(document.createElement(\"div\"));\n    this.loadingElement.classList.add(\"loading\");\n\n    if (twistyDebugGlobals.showRenderStats) {\n      this.stats = new Stats();\n      this.stats.dom.style.position = \"absolute\";\n      this.contentWrapper.appendChild(this.stats.dom);\n    }\n  }\n\n  async connectedCallback(): Promise<void> {\n    this.addCSS(twisty3DVantageCSS);\n    this.addElement((await this.canvasInfo()).canvas);\n\n    this.#onResize();\n    const observer = new ResizeObserver(this.#onResize.bind(this));\n    observer.observe(this.contentWrapper);\n    this.orbitControls(); // Instantiate orbit controls\n    this.#setupBasicPresses();\n\n    this.scheduleRender();\n  }\n\n  async #setupBasicPresses(): Promise<void> {\n    const dragTracker = await this.#dragTracker();\n    dragTracker.addEventListener(\"press\", async (e: CustomEvent<PressInfo>) => {\n      const movePressInput =\n        await this.model!.twistySceneModel.movePressInput.get();\n      if (movePressInput !== \"basic\") {\n        return;\n      }\n      this.dispatchEvent(\n        new CustomEvent(\"press\", {\n          detail: {\n            pressInfo: e.detail,\n            cameraPromise: this.camera(),\n          },\n        }),\n      );\n    });\n  }\n\n  #onResizeStaleDropper = new StaleDropper<PerspectiveCamera>();\n\n  async clearCanvas(): Promise<void> {\n    if (this.rendererIsShared) {\n      const canvasInfo = await this.canvasInfo();\n      canvasInfo.context.clearRect(\n        0,\n        0,\n        canvasInfo.canvas.width,\n        canvasInfo.canvas.height,\n      );\n    } else {\n      const renderer = await this.renderer();\n      const context = renderer.getContext();\n      context.clear(context.COLOR_BUFFER_BIT);\n    }\n  }\n\n  // TODO: Why doesn't this work for the top-right back view height?\n  #width: number = 0;\n  #height: number = 0;\n  async #onResize(): Promise<void> {\n    const camera = await this.#onResizeStaleDropper.queue(this.camera());\n\n    const w = this.contentWrapper.clientWidth;\n    const h = this.contentWrapper.clientHeight;\n    this.#width = w;\n    this.#height = h;\n    const off = 0;\n    let yoff = 0;\n    let excess = 0;\n    if (h > w) {\n      excess = h - w;\n      yoff = -Math.floor(0.5 * excess);\n    }\n    camera.aspect = w / h;\n    camera.setViewOffset(w, h - excess, off, yoff, w, h);\n    camera.updateProjectionMatrix(); // TODO\n\n    this.clearCanvas();\n    if (this.rendererIsShared) {\n      const canvasInfo = await this.canvasInfo();\n\n      canvasInfo.canvas.width = w * pixelRatio();\n      canvasInfo.canvas.height = h * pixelRatio();\n      canvasInfo.canvas.style.width = `${w.toString()}px`;\n      canvasInfo.canvas.style.height = `${h.toString()}px`;\n    } else {\n      const renderer = await this.renderer();\n      renderer.setSize(w, h, true);\n    }\n\n    this.scheduleRender();\n  }\n\n  #cachedRenderer: Promise<WebGLRenderer> | null = null;\n  async renderer(): Promise<WebGLRenderer> {\n    if (this.rendererIsShared) {\n      throw new Error(\"renderer expected to be shared.\");\n    }\n    return (this.#cachedRenderer ??= newRenderer());\n  }\n\n  #cachedCanvas: Promise<{\n    canvas: HTMLCanvasElement;\n    context: CanvasRenderingContext2D;\n  }> | null = null;\n  async canvasInfo(): Promise<{\n    canvas: HTMLCanvasElement;\n    context: CanvasRenderingContext2D;\n  }> {\n    return (this.#cachedCanvas ??= (async () => {\n      let canvas: HTMLCanvasElement;\n      if (this.rendererIsShared) {\n        canvas = this.addElement(document.createElement(\"canvas\"));\n      } else {\n        const renderer = await this.renderer();\n        canvas = this.addElement(renderer.domElement);\n      }\n      this.loadingElement?.remove();\n      const context = canvas.getContext(\"2d\")!;\n      return { canvas, context };\n    })());\n  }\n\n  #cachedDragTracker: Promise<DragTracker> | null = null;\n  async #dragTracker(): Promise<DragTracker> {\n    return (this.#cachedDragTracker ??= (async () => {\n      const dragTracker = new DragTracker((await this.canvasInfo()).canvas);\n      this.model?.twistySceneModel.dragInput.addFreshListener(\n        (dragInputMode: DragInputMode) => {\n          let dragInputEnabled = false;\n          switch (dragInputMode) {\n            case \"auto\": {\n              dragTracker.start();\n              dragInputEnabled = true;\n              break;\n            }\n            case \"none\": {\n              dragTracker.stop();\n              break;\n            }\n          }\n          this.contentWrapper.classList.toggle(\n            \"drag-input-enabled\",\n            dragInputEnabled,\n          );\n        },\n      );\n      return dragTracker;\n    })());\n  }\n\n  #cachedCamera: Promise<PerspectiveCamera> | null = null;\n  async camera(): Promise<PerspectiveCamera> {\n    return (this.#cachedCamera ??= (async () => {\n      const camera = new (await THREEJS).PerspectiveCamera(\n        20,\n        1, // We rely on the resize logic to handle this.\n        0.1,\n        20,\n      );\n      camera.position.copy(\n        new (await THREEJS).Vector3(2, 4, 4).multiplyScalar(\n          this.options?.backView ? -1 : 1,\n        ),\n      );\n      camera.lookAt(0, 0, 0);\n      // TODO: `TwistyOrbitControls` breaks isolateion\n      return camera;\n    })());\n  }\n\n  #cachedOrbitControls: Promise<TwistyOrbitControls> | null = null;\n  async orbitControls(): Promise<TwistyOrbitControls> {\n    return (this.#cachedOrbitControls ??= (async () => {\n      const orbitControls = new TwistyOrbitControls(\n        this.model!,\n        !!this.options?.backView,\n        (await this.canvasInfo()).canvas,\n        await this.#dragTracker(),\n      );\n\n      if (this.model) {\n        this.addListener(\n          this.model.twistySceneModel.orbitCoordinates,\n          async (orbitCoordinates: OrbitCoordinates) => {\n            const camera = await this.camera();\n            setCameraFromOrbitCoordinates(\n              camera,\n              orbitCoordinates,\n              this.options?.backView,\n            );\n            // TODO: Wrap in StaleDropper?\n\n            this.scheduleRender();\n          },\n        );\n      }\n\n      return orbitControls;\n    })());\n  }\n\n  addListener<T>(\n    prop: TwistyPropParent<T>,\n    listener: (value: T) => void,\n  ): void {\n    prop.addFreshListener(listener);\n    this.#disconnectionFunctions.push(() => {\n      prop.removeFreshListener(listener);\n      // disconnected = true; // TODO\n    });\n  }\n\n  #disconnectionFunctions: (() => void)[] = [];\n  disconnect(): void {\n    for (const fn of this.#disconnectionFunctions) {\n      fn();\n    }\n    this.#disconnectionFunctions = []; // TODO: Encapsulate this.\n  }\n\n  #experimentalNextRenderFinishedCallback: (() => void) | null = null;\n  experimentalNextRenderFinishedCallback(callback: () => void): void {\n    this.#experimentalNextRenderFinishedCallback = callback;\n  }\n\n  async render(): Promise<void> {\n    if (!this.scene) {\n      throw new Error(\"Attempted to render without a scene\");\n    }\n\n    this.stats?.begin();\n\n    const [scene, camera, canvas] = await Promise.all([\n      this.scene.scene(),\n      this.camera(),\n      this.canvasInfo(),\n    ]);\n    if (this.rendererIsShared) {\n      renderPooled(this.#width, this.#height, canvas.canvas, scene, camera);\n    } else {\n      (await this.renderer()).render(scene, camera);\n    }\n\n    this.stats?.end();\n    this.#experimentalNextRenderFinishedCallback?.();\n    this.#experimentalNextRenderFinishedCallback = null;\n  }\n\n  #scheduler = new RenderScheduler(this.render.bind(this));\n  scheduleRender(): void {\n    // console.log(\"scheduling\", this);\n    this.#scheduler.requestAnimFrame();\n  }\n}\n\ncustomElementsShim.define(\"twisty-3d-vantage\", Twisty3DVantage);\n"],
  "mappings": "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",
  "names": ["twistyDebugGlobals", "setTwistyDebug", "options", "key", "value", "hintFaceletStyles", "HintFaceletProp", "SimpleTwistyPropSource", "globalPixelRatioOverride", "setGlobalPixelRatioOverride", "override", "pixelRatio", "RenderScheduler", "callback", "timestamp", "TAU", "DEGREES_PER_RADIAN", "performance", "Stats", "StatsPanel", "event", "panel", "id", "i", "time", "memory", "PR", "WIDTH", "HEIGHT", "TEXT_X", "TEXT_Y", "GRAPH_X", "GRAPH_Y", "GRAPH_WIDTH", "GRAPH_HEIGHT", "name", "fg", "bg", "value", "maxValue", "cachedConstructorProxy", "proxy3D", "THREEJS", "from", "twisty3DVantageCSS", "CSSSource", "DragTracker", "target", "#dragInfoMap", "eventType", "listener", "#targetListeners", "#lazyListenersRegistered", "#registerLazyListeners", "#clear", "#trackDrag", "existing", "movementInfo", "newDragInfo", "trackDragResult", "event", "altKey", "ctrlKey", "metaKey", "shiftKey", "renderers", "rawRenderPooled", "width", "height", "scene", "camera", "newRenderer", "renderer", "renderPooled", "canvas", "rendererCanvas", "context", "rendererConstructor", "THREEJS", "pixelRatio", "INERTIA_DEFAULT", "INERTIA_DURATION_MS", "INERTIA_TIMEOUT_MS", "VERTICAL_MOVEMENT_BASE_SCALE", "momentumScale", "progress", "Inertia", "startTimestamp", "momentumX", "momentumY", "callback", "RenderScheduler", "now", "progressBefore", "progressAfter", "delta", "TwistyOrbitControls", "model", "mirror", "canvas", "dragTracker", "INERTIA_DEFAULT", "f", "e", "_a", "temperedX", "temperedY", "attachedInfo", "movementX", "movementY", "scale", "minDim", "VERTICAL_MOVEMENT_BASE_SCALE", "prevCoords", "DEGREES_PER_RADIAN", "Inertia", "setCameraFromOrbitCoordinates", "camera", "orbitCoordinates", "backView", "spherical", "THREEJS", "DEGREES_PER_RADIAN", "dedicatedRenderersSoFar", "DEFAULT_MAX_DEDICATED_RENDERERS", "sharingRenderers", "shareRenderer", "twistyDebugGlobals", "haveStartedSharingRenderers", "Twisty3DVantage", "ManagedCustomElement", "model", "scene", "options", "#onResizeStaleDropper", "StaleDropper", "#width", "#height", "#cachedRenderer", "#cachedCanvas", "#cachedDragTracker", "#cachedCamera", "#cachedOrbitControls", "#disconnectionFunctions", "#experimentalNextRenderFinishedCallback", "#scheduler", "RenderScheduler", "Stats", "twisty3DVantageCSS", "#onResize", "#setupBasicPresses", "#dragTracker", "e", "canvasInfo", "context", "w", "h", "off", "yoff", "excess", "pixelRatio", "newRenderer", "canvas", "renderer", "dragTracker", "DragTracker", "dragInputMode", "dragInputEnabled", "orbitControls", "TwistyOrbitControls", "prop", "listener", "fn", "callback", "renderPooled", "customElementsShim"]
}
