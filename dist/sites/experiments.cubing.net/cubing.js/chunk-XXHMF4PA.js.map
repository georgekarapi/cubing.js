{
  "version": 3,
  "sources": ["../../../../src/sites/experiments.cubing.net/cubing.js/play/input/SwipeyPuzzle.ts", "../../../../src/sites/experiments.cubing.net/cubing.js/play/input/SwipeGrid.ts"],
  "sourcesContent": ["import { Alg } from \"../../../../../cubing/alg\";\nimport type { AlgLeaf } from \"../../../../../cubing/alg/alg-nodes/AlgNode\";\nimport { puzzles } from \"../../../../../cubing/puzzles\";\n// import { BackViewLayout } from \"../../../../../cubing/twisty\";\nimport {\n  BackViewLayout,\n  TwistyPlayer,\n  TwistyPlayerConfig,\n} from \"../../../../../cubing/twisty\";\nimport { getSetup, PuzzleID, getCancel } from \"../url-params\";\nimport { SwipeGrid, themes, ThemeType } from \"./SwipeGrid\";\n\nconst DEFAULT_THEME: ThemeType = \"transparent-grid\";\n\nexport const moveMaps: Record<PuzzleID, string[][]> = {\n  \"3x3x3\": [\n    [\"\", \"U'\", \"U2'\", \"L\", \"l\", \"u'\", \"L2\", \"M2\", \"/enter\"],\n    [\"U\", \"\", \"U'\", \"B\", \"x'\", \"B'\", \"B2\", \"x2'\", \"B2'\"],\n    [\"U2\", \"U\", \"\", \"u\", \"r'\", \"R'\", \"/backspace\", \"M2\", \"R2'\"],\n    [\"L'\", \"B'\", \"u'\", \"\", \"y'\", \"y2'\", \"F'\", \"M\", \"F2\"],\n    [\"l'\", \"x\", \"r\", \"y\", \"\", \"y'\", \"d'\", \"x'\", \"d\"],\n    [\"u\", \"B\", \"R\", \"y2\", \"y\", \"\", \"F2'\", \"M\", \"F\"],\n    [\"L2'\", \"B2'\", \"z\", \"F\", \"d\", \"F2\", \"\", \"D\", \"D2\"],\n    [\"M2'\", \"x2\", \"M2'\", \"M'\", \"x\", \"M'\", \"D'\", \"\", \"D\"],\n    [\"/space\", \"B2\", \"R2\", \"F2'\", \"d'\", \"F'\", \"D2'\", \"D'\", \"\"],\n  ],\n  \"2x2x2\": [\n    [\"\", \"U'\", \"U2'\", \"L\", \"l\", \"u'\", \"L2\", \"M2\", \"/enter\"],\n    [\"U\", \"\", \"U'\", \"B\", \"x'\", \"B'\", \"B2\", \"x2'\", \"B2'\"],\n    [\"U2\", \"U\", \"\", \"u\", \"r'\", \"R'\", \"z'\", \"M2\", \"R2'\"],\n    [\"L'\", \"B'\", \"u'\", \"\", \"y'\", \"y2'\", \"F'\", \"M\", \"F2\"],\n    [\"l'\", \"x\", \"r\", \"y\", \"\", \"y'\", \"d'\", \"x'\", \"d\"],\n    [\"u\", \"B\", \"R\", \"y2\", \"y\", \"\", \"F2'\", \"M\", \"F\"],\n    [\"L2'\", \"B2'\", \"z\", \"F\", \"d\", \"F2\", \"\", \"D\", \"D2\"],\n    [\"M2'\", \"x2\", \"M2'\", \"M'\", \"x\", \"M'\", \"D'\", \"\", \"D\"],\n    [\"/space\", \"B2\", \"R2\", \"F2'\", \"d'\", \"F'\", \"D2'\", \"D'\", \"\"],\n  ],\n  \"4x4x4\": [\n    [\"\", \"U'\", \"U2'\", \"L\", \"l\", \"u'\", \"L2\", \"2L2\", \"/enter\"],\n    [\"U\", \"\", \"U'\", \"B\", \"Rv'\", \"B'\", \"B2\", \"Rv2'\", \"B2'\"],\n    [\"U2\", \"U\", \"\", \"u\", \"r'\", \"R'\", \"Fv'\", \"2R2'\", \"R2'\"],\n    [\"L'\", \"B'\", \"u'\", \"\", \"Uv'\", \"Uv2'\", \"F'\", \"2L\", \"F2\"],\n    [\"l'\", \"Rv\", \"r\", \"Uv\", \"\", \"Uv'\", \"d'\", \"Lv\", \"d\"],\n    [\"u\", \"B\", \"R\", \"Uv2\", \"Uv\", \"\", \"F2'\", \"2R'\", \"F\"],\n    [\"L2'\", \"B2'\", \"Fv\", \"F\", \"d\", \"F2\", \"\", \"D\", \"D2\"],\n    [\"2L2'\", \"Rv2\", \"2R2\", \"2L'\", \"Lv'\", \"2R\", \"D'\", \"\", \"D\"],\n    [\"/space\", \"B2\", \"R2\", \"F2'\", \"d'\", \"F'\", \"D2'\", \"D'\", \"\"],\n  ],\n  \"5x5x5\": [\n    [\"\", \"U'\", \"U2'\", \"L\", \"l\", \"u'\", \"L2\", \"2L2\", \"/enter\"],\n    [\"U\", \"\", \"U'\", \"B\", \"Rv'\", \"B'\", \"B2\", \"Rv2'\", \"B2'\"],\n    [\"U2\", \"U\", \"\", \"u\", \"r'\", \"R'\", \"Fv'\", \"2R2'\", \"R2'\"],\n    [\"L'\", \"B'\", \"u'\", \"\", \"Uv'\", \"Uv2'\", \"F'\", \"2L\", \"F2\"],\n    [\"l'\", \"Rv\", \"r\", \"Uv\", \"\", \"Uv'\", \"d'\", \"Lv\", \"d\"],\n    [\"u\", \"B\", \"R\", \"Uv2\", \"Uv\", \"\", \"F2'\", \"2R'\", \"F\"],\n    [\"L2'\", \"B2'\", \"Fv\", \"F\", \"d\", \"F2\", \"\", \"D\", \"D2\"],\n    [\"2L2'\", \"Rv2\", \"2R2\", \"2L'\", \"Lv'\", \"2R\", \"D'\", \"\", \"D\"],\n    [\"/space\", \"B2\", \"R2\", \"F2'\", \"d'\", \"F'\", \"D2'\", \"D'\", \"\"],\n  ],\n  fto: [\n    [\"\", \"U'\", \"U2'\", \"L\", \"l\", \"u'\", \"L2\", \"2L2\", \"/enter\"],\n    [\"U\", \"\", \"U'\", \"BL\", \"Rv'\", \"BR'\", \"BL2\", \"Rv2'\", \"BR2'\"],\n    [\"U2\", \"U\", \"\", \"u\", \"r'\", \"R'\", \"Fv'\", \"2R2'\", \"R2'\"],\n    [\"L'\", \"BL'\", \"u'\", \"\", \"Uv'\", \"Uv2'\", \"F'\", \"2L\", \"F2\"],\n    [\"l'\", \"Rv\", \"r\", \"Uv\", \"\", \"Uv'\", \"d'\", \"Lv\", \"d\"],\n    [\"u\", \"BR\", \"R\", \"Uv2\", \"Uv\", \"\", \"F2'\", \"2R'\", \"F\"],\n    [\"L2'\", \"BL2'\", \"Fv\", \"F\", \"d\", \"F2\", \"\", \"D\", \"D\"],\n    [\"2L2'\", \"Rv2\", \"2R2\", \"2L'\", \"Lv'\", \"2R\", \"D'\", \"\", \"D\"],\n    [\"/space\", \"BR2\", \"R2\", \"F2'\", \"d'\", \"F'\", \"D'\", \"D'\", \"\"],\n  ],\n  megaminx: [\n    [\"\", \"U'\", \"U2'\", \"L\", \"dl\", \"u'\", \"L2\", \"\", \"/enter\"],\n    [\"U\", \"\", \"U'\", \"BL\", \"Rv'\", \"BR'\", \"BL2\", \"Rv2'\", \"BR2'\"],\n    [\"U2\", \"U\", \"\", \"u\", \"dr'\", \"R'\", \"Fv'\", \"\", \"R2'\"],\n    [\"L'\", \"BL'\", \"u'\", \"\", \"Uv'\", \"Uv2'\", \"F'\", \"2L\", \"F2\"],\n    [\"dl'\", \"Rv\", \"dr\", \"Uv\", \"\", \"Uv'\", \"d'\", \"Lv\", \"d\"],\n    [\"u\", \"BR\", \"R\", \"Uv2\", \"Uv\", \"\", \"F2'\", \"2R'\", \"F\"],\n    [\"L2'\", \"BL2'\", \"Fv\", \"F\", \"d\", \"F2\", \"\", \"FL\", \"D\"],\n    [\"\", \"Rv2\", \"\", \"2L'\", \"Lv'\", \"2R\", \"FL'\", \"\", \"FR\"],\n    [\"/space\", \"BR2\", \"R2\", \"F2'\", \"d'\", \"F'\", \"D'\", \"FR'\", \"\"],\n  ],\n};\n\nexport type Action = \"space\" | \"enter\" | \"backspace\";\n\nexport function actionToUIText(action: Action): string {\n  return {\n    space: \"\u23EE\",\n    enter: \"\u25B6\uFE0F\",\n    backspace: \"\u20D4\",\n  }[action];\n}\n\nfunction constructTwistyPlayer(puzzleName: PuzzleID): TwistyPlayer {\n  const config: TwistyPlayerConfig = {\n    alg: new Alg(),\n    puzzle: puzzleName,\n    controlPanel: \"none\",\n    background: \"none\",\n    experimentalSetupAlg: getSetup(),\n  };\n  const backView = new URL(document.location.href).searchParams.get(\n    \"back-view\",\n  ) as BackViewLayout | undefined;\n  if (backView) {\n    config.backView = backView;\n  }\n  return new TwistyPlayer(config);\n}\n\nexport class SwipeyPuzzle extends HTMLElement {\n  public twistyPlayer: TwistyPlayer;\n\n  theme: ThemeType;\n\n  constructor(\n    private puzzleName: PuzzleID,\n    private actionListener: (action: Action) => void,\n    private algListener: () => void,\n  ) {\n    super();\n    this.twistyPlayer = constructTwistyPlayer(puzzleName);\n\n    let theme: ThemeType | null = new URL(\n      document.location.href,\n    ).searchParams.get(\"theme\") as ThemeType | null;\n    if (!themes.includes(theme as ThemeType /* TODO*/)) {\n      theme = DEFAULT_THEME;\n    }\n    this.theme = theme!;\n    console.log(\"Using theme:\", this.theme);\n  }\n\n  public setActionListener(actionListener: (action: Action) => void) {\n    this.actionListener = actionListener;\n  }\n\n  public setAlgListener(algListener: () => void): void {\n    this.algListener = algListener;\n  }\n\n  protected connectedCallback() {\n    this.appendChild(this.twistyPlayer);\n    this.twistyPlayer.tempoScale = 3;\n\n    if (this.puzzleName !== \"3x3x3\") {\n      setTimeout(async () => {\n        const icon = await this.twistyPlayer.experimentalScreenshot();\n        // const icon = (\n        //   this.twistyPlayer.viewerElems[0] as Twisty3DCanvas\n        // ).renderToDataURL({\n        //   squareCrop: true,\n        // });\n        console.log(\"Setting touch icon from canvas.\");\n        (\n          document.querySelector(\n            'link[rel=\"apple-touch-icon\"]',\n          ) as HTMLLinkElement\n        ).href = icon;\n      }, 100);\n    }\n  }\n\n  public showGrid(): void {\n    const swipeGrid: SwipeGrid = new SwipeGrid(\n      this.puzzleName,\n      this.onAlgLeaf.bind(this),\n      (action: Action) => this.actionListener(action),\n      this.theme === \"grid-back\" ? \"blank\" : this.theme,\n      true,\n    );\n    this.appendChild(swipeGrid);\n\n    if (this.theme === \"transparent-grid\" || this.theme === \"grid-back\") {\n      const swipeGridExtra: SwipeGrid = new SwipeGrid(\n        this.puzzleName,\n        this.onAlgLeaf.bind(this),\n        (action: Action) => this.actionListener(action),\n        \"transparent-grid-back\",\n        false,\n      );\n      this.prepend(swipeGridExtra);\n    }\n  }\n\n  private onAlgLeaf(algLeaf: AlgLeaf): void {\n    this.addAlgLeaf(algLeaf);\n    this.algListener();\n  }\n\n  // TODO: move this somewhere better.\n  public addAlgLeaf(algLeaf: AlgLeaf): void {\n    try {\n      // TODO: allow`TwistyPlayer` to handle this directly.\n      this.twistyPlayer.experimentalAddAlgLeaf(algLeaf, {\n        cancel: {\n          directional: getCancel() ? \"any-direction\" : \"none\",\n          puzzleSpecificModWrap: \"gravity\",\n        },\n        puzzleSpecificSimplifyOptions:\n          puzzles[this.puzzleName]?.puzzleSpecificSimplifyOptions,\n      });\n    } catch (e) {\n      console.warn(\"Invalid alg leaf\");\n      // this.twistyPlayer.alg = oldAlg;\n    }\n  }\n}\n\nif (customElements) {\n  customElements.define(\"swipey-puzzle\", SwipeyPuzzle);\n}\n", "import { Move } from \"../../../../../cubing/alg\";\nimport type { PuzzleID, StringListAsType } from \"../url-params\";\nimport { ActiveSwipe, SwipeTracker } from \"./SwipeTracker\";\nimport { Action, actionToUIText, moveMaps } from \"./SwipeyPuzzle\";\n\nexport const themes = [\n  \"blank\",\n  \"grid\",\n  \"grid-back\",\n  \"transparent-grid\",\n  \"transparent-grid-back\",\n  \"HUD\",\n  \"box\",\n  \"layers\",\n  \"dots\",\n  \"cross-hairs\",\n] as const;\n\nexport type ThemeType = StringListAsType<typeof themes>;\n\n// TODO: Handle multiple simultaneous swipes.\nexport class SwipeGrid extends HTMLElement {\n  private swipeTracker: SwipeTracker;\n  private sectors: HTMLElement[];\n\n  private sectorMap: Map<HTMLElement, number> = new Map();\n  // `swipeSource` indicates if a swipe is in progress.\n  private swipeSource: HTMLElement | null = null;\n  // private currentMove: string | null = null;\n  // private lastSectorUnderSwipe: HTMLElement | null = null;\n  private showAllTargetMovesID: number = 0; // TODO: use proper state tracking.\n  constructor(\n    private puzzleName: PuzzleID,\n    private moveListener: (move: Move) => void,\n    private actionListener: (action: Action) => void,\n    private theme: ThemeType,\n    _active: boolean = false, // TODO\n  ) {\n    super();\n\n    this.sectors = [];\n    for (let i = 0; i < 9; i++) {\n      const sector = document.createElement(\"div\");\n      this.sectors.push(sector);\n      this.sectorMap.set(sector, i);\n    }\n    this.swipeTracker = new SwipeTracker(\n      this.sectors,\n      this.onTouchChange.bind(this),\n      this.onSwipeFinish.bind(this),\n    );\n\n    this.classList.add(`theme-${this.theme}`);\n  }\n\n  protected connectedCallback() {\n    for (const sector of this.sectors) {\n      this.appendChild(sector);\n    }\n  }\n\n  private onTouchChange(swipes: ActiveSwipe[]) {\n    const newSectorData: Map<\n      HTMLElement,\n      {\n        isSource: boolean;\n        isTentativeTarget: boolean;\n        isSelfRetarget: boolean;\n        text: string;\n        hasMoved: boolean;\n      }\n    > = new Map();\n    for (const sector of this.sectors) {\n      newSectorData.set(sector, {\n        isSource: false,\n        isTentativeTarget: false,\n        isSelfRetarget: false,\n        text: \"\",\n        hasMoved: false,\n      });\n    }\n\n    for (const swipe of swipes) {\n      const data = newSectorData.get(swipe.sourceSector)!;\n      data.isSource = true;\n      data.text = this.moveUIText(\n        moveMaps[this.puzzleName][this.sectorMap.get(swipe.sourceSector)!][\n          this.sectorMap.get(swipe.currentSector!)!\n        ],\n      );\n      data.hasMoved = data.hasMoved || swipe.hasMovedAwayFromSourceSector;\n      newSectorData.get(swipe.currentSector!)!.isTentativeTarget = true;\n      data.isSelfRetarget =\n        data.isSelfRetarget ||\n        (swipe.hasMovedAwayFromSourceSector &&\n          swipe.sourceSector === swipe.currentSector);\n    }\n\n    for (const [sector, data] of newSectorData.entries()) {\n      sector.classList.toggle(\"source\", data.isSource);\n      sector.classList.toggle(\"tentative-target\", data.isTentativeTarget);\n      sector.classList.toggle(\"self-retarget\", data.isSelfRetarget);\n      sector.textContent = data.text;\n    }\n\n    if (swipes.length === 1 && !swipes[0].hasMovedAwayFromSourceSector) {\n      this.showAllTargetMovesID++;\n      this.showAllTargetMoves(swipes[0]);\n    } else {\n      this.classList.remove(\"showing-all-targets\");\n    }\n  }\n\n  private onSwipeFinish(source: HTMLElement, target: HTMLElement) {\n    this.hideAllTargetMoves();\n    const move =\n      moveMaps[this.puzzleName][this.sectorMap.get(source)!][\n        this.sectorMap.get(target)!\n      ];\n    if (move === \"\") {\n      // nothing\n    } else if (move.startsWith(\"/\")) {\n      this.actionListener(move.slice(1) as Action);\n      if (move === \"space\") {\n        this.swipeTracker.reset();\n      }\n    } else {\n      this.moveListener(new Move(move));\n    }\n  }\n\n  showAllTargetMoves(swipe: ActiveSwipe): void {\n    this.showAllTargetMovesID++;\n    const id = this.showAllTargetMovesID;\n    setTimeout(() => {\n      if (\n        this.showAllTargetMovesID !== id ||\n        !this.swipeTracker.isSwipeStillActive(swipe) ||\n        swipe.hasMovedAwayFromSourceSector\n      ) {\n        return;\n      }\n      for (let i = 0; i < this.sectors.length; i++) {\n        const targetSector = this.sectors[i];\n        if (targetSector !== swipe.sourceSector) {\n          targetSector.textContent = this.moveUIText(\n            moveMaps[this.puzzleName][this.sectorMap.get(swipe.sourceSector)!][\n              i\n            ],\n          );\n        }\n      }\n      this.classList.add(\"showing-all-targets\");\n    }, 500);\n  }\n\n  hideAllTargetMoves(): void {\n    this.showAllTargetMovesID++;\n    this.classList.remove(\"showing-all-targets\");\n    for (const targetSector of this.sectorMap.keys()) {\n      if (targetSector !== this.swipeSource) {\n        targetSector.textContent = \"\";\n      }\n    }\n  }\n\n  private moveUIText(move: string): string {\n    if (move.startsWith(\"/\")) {\n      return actionToUIText(move.slice(1) as Action);\n    }\n    return move;\n  }\n}\n\nif (customElements) {\n  customElements.define(\"swipe-grid\", SwipeGrid);\n}\n"],
  "mappings": "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",
  "names": ["DEFAULT_THEME", "moveMaps", "actionToUIText", "action", "constructTwistyPlayer", "puzzleName", "config", "Alg", "getSetup", "backView", "TwistyPlayer", "SwipeyPuzzle", "actionListener", "algListener", "theme", "themes", "icon", "swipeGrid", "SwipeGrid", "swipeGridExtra", "algLeaf", "getCancel", "puzzles", "themes", "SwipeGrid", "puzzleName", "moveListener", "actionListener", "theme", "_active", "i", "sector", "SwipeTracker", "swipes", "newSectorData", "swipe", "data", "moveMaps", "source", "target", "move", "Move", "id", "targetSector", "actionToUIText"]
}
